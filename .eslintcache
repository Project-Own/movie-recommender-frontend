[{"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/serviceWorker.js":"1","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/frontPage/userProfile.js":"2","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/features/Snackbar/Snackbar.js":"3","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/features/Auth/registerSlice.js":"4","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/AppBar/TopNavBar.js":"5","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/SearchComponent/MovieSearch.js":"6","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/frontPage/ImageSlider.js":"7","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/themes/dark.js":"8","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/Recommender/Recommender.js":"9","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/ScrollFollow/ScrollFollow.jsx":"10","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/SearchComponent/MovieCard.js":"11","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/FlipCard/FlipCard.js":"12","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/frontPage/MovieCard.jsx":"13","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/FloatCard/FloatCard.jsx":"14","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/themes/theme.js":"15","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/views/Layout/Home.js":"16","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/views/Layout/auth/Login.js":"17","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/views/Layout/auth/Register.js":"18","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/LikeButton/LikeButton.jsx":"19","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/ScrollTop/ScrollTop.jsx":"20","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/features/Auth/utils/setAuthToken.js":"21","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/Recommender/data.js":"22","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/ScrollFollow/useScrollPosition.js":"23","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/SearchComponent/MovieAutoComplete.js":"24","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/Grid/Primitives.js":"25","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/features/Auth/loadUser.js":"26","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/views/App/App.js":"27","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/CustomThemeProvider.js":"28","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/themes/base.js":"29","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/frontPage/imdbList.js":"30","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/Draggable/Draggable.js":"31","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/frontPage/Contents.jsx":"32","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/ScrollFollow/useMousePosition.js":"33","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/Grid/CustomGrid.js":"34","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/store.js":"35","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/views/Layout/UserPickLayout.js":"36","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/frontPage/Header.jsx":"37","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/AppBar/HideOnScroll.jsx":"38","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/frontPage/oscar_data.js":"39","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/views/Layout/Layout.js":"40","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/frontPage/Footer.jsx":"41","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/index.js":"42","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/frontPage/userProfileUi.js":"43","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/Recommender/Cell.js":"44","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/views/Layout/Profile.js":"45","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/themes/light.js":"46","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/SearchComponent/MovieSearchCard.js":"47","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/features/Snackbar/snackbarSlice.js":"48"},{"size":5086,"mtime":1613124486178,"results":"49","hashOfConfig":"50"},{"size":632,"mtime":1613124486175,"results":"51","hashOfConfig":"50"},{"size":1291,"mtime":1613124486175,"results":"52","hashOfConfig":"50"},{"size":1888,"mtime":1613291703697,"results":"53","hashOfConfig":"50"},{"size":7669,"mtime":1613236524534,"results":"54","hashOfConfig":"50"},{"size":3509,"mtime":1613124486175,"results":"55","hashOfConfig":"50"},{"size":1127,"mtime":1613124486175,"results":"56","hashOfConfig":"50"},{"size":632,"mtime":1613124486178,"results":"57","hashOfConfig":"50"},{"size":10735,"mtime":1613291198079,"results":"58","hashOfConfig":"50"},{"size":12422,"mtime":1613124486175,"results":"59","hashOfConfig":"50"},{"size":4143,"mtime":1613124486175,"results":"60","hashOfConfig":"50"},{"size":1536,"mtime":1613124486175,"results":"61","hashOfConfig":"50"},{"size":6939,"mtime":1613305807435,"results":"62","hashOfConfig":"50"},{"size":860,"mtime":1613124486175,"results":"63","hashOfConfig":"50"},{"size":217,"mtime":1613124486178,"results":"64","hashOfConfig":"50"},{"size":1534,"mtime":1613288922285,"results":"65","hashOfConfig":"50"},{"size":3242,"mtime":1613285948092,"results":"66","hashOfConfig":"50"},{"size":4430,"mtime":1613286878160,"results":"67","hashOfConfig":"50"},{"size":2442,"mtime":1613291081581,"results":"68","hashOfConfig":"50"},{"size":1231,"mtime":1613124486175,"results":"69","hashOfConfig":"50"},{"size":250,"mtime":1613124486175,"results":"70","hashOfConfig":"50"},{"size":2184,"mtime":1613124486175,"results":"71","hashOfConfig":"50"},{"size":1169,"mtime":1613124486175,"results":"72","hashOfConfig":"50"},{"size":4332,"mtime":1613124486175,"results":"73","hashOfConfig":"50"},{"size":1724,"mtime":1613124486175,"results":"74","hashOfConfig":"50"},{"size":841,"mtime":1613287061589,"results":"75","hashOfConfig":"50"},{"size":716,"mtime":1613124486178,"results":"76","hashOfConfig":"50"},{"size":1386,"mtime":1613124486168,"results":"77","hashOfConfig":"50"},{"size":163,"mtime":1613124486178,"results":"78","hashOfConfig":"50"},{"size":1987,"mtime":1613124486175,"results":"79","hashOfConfig":"50"},{"size":2570,"mtime":1613124486175,"results":"80","hashOfConfig":"50"},{"size":7843,"mtime":1613306455675,"results":"81","hashOfConfig":"50"},{"size":493,"mtime":1613124486175,"results":"82","hashOfConfig":"50"},{"size":5378,"mtime":1613124486175,"results":"83","hashOfConfig":"50"},{"size":295,"mtime":1613124486178,"results":"84","hashOfConfig":"50"},{"size":823,"mtime":1613306308252,"results":"85","hashOfConfig":"50"},{"size":833,"mtime":1613124486175,"results":"86","hashOfConfig":"50"},{"size":398,"mtime":1613124486175,"results":"87","hashOfConfig":"50"},{"size":15020,"mtime":1613124486175,"results":"88","hashOfConfig":"50"},{"size":3864,"mtime":1613292330337,"results":"89","hashOfConfig":"50"},{"size":1549,"mtime":1613124486175,"results":"90","hashOfConfig":"50"},{"size":530,"mtime":1613124486175,"results":"91","hashOfConfig":"50"},{"size":4053,"mtime":1613124486175,"results":"92","hashOfConfig":"50"},{"size":4783,"mtime":1613305061424,"results":"93","hashOfConfig":"50"},{"size":1266,"mtime":1613232835705,"results":"94","hashOfConfig":"50"},{"size":492,"mtime":1613124486178,"results":"95","hashOfConfig":"50"},{"size":2179,"mtime":1613124486175,"results":"96","hashOfConfig":"50"},{"size":694,"mtime":1613124486175,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"qym2xn",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"105"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"108"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"108"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"114"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"127"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"108"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"127"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"108"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"114"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/serviceWorker.js",[],["215","216"],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/frontPage/userProfile.js",[],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/features/Snackbar/Snackbar.js",[],["217","218"],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/features/Auth/registerSlice.js",[],["219","220"],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/AppBar/TopNavBar.js",["221","222","223","224","225","226","227"],"import React, { useContext } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  useScrollTrigger,\n  Switch,\n  Button,\n  Slide,\n  makeStyles,\n  IconButton,\n  Hidden,\n  Drawer,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  useTheme,\n  Zoom,\n  Fab,\n  Link as LinkMUI,\n  Grid,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport PropTypes from \"prop-types\";\nimport { CustomThemeContext } from \"../../CustomThemeProvider\";\nimport { Link } from \"react-router-dom\";\nimport HideOnScroll from \"./HideOnScroll\";\n\nimport {\n  failure,\n  selectIsAuthenticated,\n  selectUser,\n} from \"../../features/Auth/registerSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction ElevationScroll(props) {\n  const { children } = props;\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n  });\n\n  return (\n    // <Slide appear={false} direction=\"down\" in={trigger}>\n    React.cloneElement(children, {\n      elevation: trigger ? 4 : 0,\n    })\n    // {/* </Slide> */}\n  );\n}\n\nElevationScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n\n  title: {\n    flexGrow: 1,\n    color: \"white\",\n  },\n  text: {\n    color: \"white\",\n  },\n  drawerText: {\n    color: theme.palette.text.primary,\n  },\n\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  navBar: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  appBar: {\n    zIndex: 1000,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n}));\n\nexport default function TopNavBar(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const { currentTheme, setTheme } = useContext(CustomThemeContext);\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const dispatch = useDispatch();\n\n  const isAuthenticated = useSelector(selectIsAuthenticated);\n  const user = useSelector(selectUser);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const isDark = Boolean(currentTheme === \"dark\");\n\n  const handleThemeChange = (event) => {\n    const { checked } = event.target;\n    if (checked) {\n      setTheme(\"dark\");\n    } else {\n      setTheme(\"light\");\n    }\n  };\n\n  function logout() {\n    dispatch(\n      failure({\n        type: \"REGISTER_FAIL\",\n      })\n    );\n  }\n\n  const drawer = (\n    <div className={classes.drawerContainer}>\n      <Link to=\"/movie-recommender-frontend/\">\n        <Typography variant=\"h5\" color=\"textPrimary\" style={{ padding: 20 }}>\n          REC\n        </Typography>\n      </Link>\n\n      <Divider />\n      <List>\n        {isAuthenticated ? (\n          <>\n            <Link to=\"/movie-recommender-frontend/profile\">\n              <ListItem button>\n                <ListItemIcon>\n                  <InboxIcon />\n                </ListItemIcon>\n\n                <ListItemText\n                  primary={\n                    typeof user !== \"undefined\"\n                      ? user?.name.toUpperCase()\n                      : \"User\"\n                  }\n                  className={classes.drawerText}\n                />\n              </ListItem>\n            </Link>\n\n            <Link to=\"/movie-recommender-frontend/\">\n              <ListItem button>\n                <ListItemIcon>\n                  <InboxIcon />\n                </ListItemIcon>\n\n                <ListItemText\n                  onClick={logout}\n                  primary=\"Log Out\"\n                  className={classes.drawerText}\n                />\n              </ListItem>\n            </Link>\n          </>\n        ) : (\n          <>\n            <Link to=\"/movie-recommender-frontend/login\">\n              <ListItem button>\n                <ListItemIcon>\n                  <InboxIcon />\n                </ListItemIcon>\n\n                <ListItemText primary=\"Login\" className={classes.drawerText} />\n              </ListItem>\n            </Link>\n\n            <Link to=\"/movie-recommender-frontend/register\">\n              <ListItem button>\n                <ListItemIcon>\n                  <InboxIcon />\n                </ListItemIcon>\n\n                <ListItemText\n                  primary=\"Register\"\n                  className={classes.drawerText}\n                />\n              </ListItem>\n            </Link>\n          </>\n        )}\n      </List>\n      <Divider />\n      <Grid container style={{ paddingTop: 20, paddingLeft: 5 }}>\n        <Grid item xs={3}>\n          <Switch checked={isDark} onChange={handleThemeChange} />\n        </Grid>\n        <Grid item xs={9}>\n          <Typography color=\"textPrimary\" style={{ padding: 5 }}>\n            Dark Mode\n          </Typography>\n        </Grid>\n      </Grid>\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      {/* <ElevationScroll {...props}> */}\n      <HideOnScroll {...props}>\n        <AppBar>\n          <Toolbar id=\"back-to-top-anchor\">\n            <Link to=\"/movie-recommender-frontend/\" className={classes.title}>\n              <Typography variant=\"h5\" className={classes.title}>\n                REC\n              </Typography>\n            </Link>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              edge=\"end\"\n              onClick={handleDrawerToggle}\n              className={classes.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>\n            <nav className={classes.navBar}>\n              {isAuthenticated ? (\n                <>\n                  <Link to=\"/movie-recommender-frontend/profile\">\n                    <Button variant=\"text\" className={classes.title}>\n                      {typeof user !== \"undefined\" ? user?.name : \"User\"}\n                    </Button>\n                  </Link>\n\n                  <Link to=\"/movie-recommender-frontend/\">\n                    <Button\n                      variant=\"text\"\n                      className={classes.title}\n                      onClick={logout}\n                    >\n                      Logout\n                    </Button>\n                  </Link>\n                </>\n              ) : (\n                <>\n                  <Link to=\"/movie-recommender-frontend/login\">\n                    <Button variant=\"text\" className={classes.title}>\n                      Login\n                    </Button>\n                  </Link>\n                  <Link to=\"/movie-recommender-frontend/register\">\n                    <Button variant=\"text\" className={classes.title}>\n                      Register\n                    </Button>\n                  </Link>\n                </>\n              )}\n              <Switch checked={isDark} onChange={handleThemeChange} />\n            </nav>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      {/* </ElevationScroll> */}\n      <Hidden smUp implementation=\"css\">\n        <Drawer\n          // container={container}\n          variant=\"temporary\"\n          anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n    </div>\n  );\n}\n","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/SearchComponent/MovieSearch.js",[],["228","229"],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/frontPage/ImageSlider.js",[],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/themes/dark.js",[],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/Recommender/Recommender.js",["230","231","232","233","234","235","236","237"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\nimport {\n  Container,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport Axios from \"axios\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport FloatCard from \"../FloatCard/FloatCard\";\nimport CustomGrid from \"../Grid/CustomGrid\";\n\nimport data from \"./data\";\nimport { config } from \"react-spring/renderprops\";\nimport Cell from \"./Cell\";\nimport FlipCard from \"../FlipCard/FlipCard\";\nimport { useSelector } from \"react-redux\";\nimport { selectPreferredMovies } from \"../../features/Auth/registerSlice\";\nconst API_ADDRESS = \"https://www.omdbapi.com/?apikey=e4c29baa&i=\";\nconst RECOMMEND_API_ADDRESS =\n  \"https://vae-movie-recommender.herokuapp.com/predict/10\";\n\nconst useStyles = makeStyles((theme) => ({\n  bar: {\n    borderRadius: \"0px 0px 10px 10px\",\n  },\n  image: {\n    borderRadius: \"10px\",\n    width: 200,\n  },\n\n  buttonbasestyle: {\n    // maxWidth: \"200px\",\n    maxHeight: \"20px\",\n    minWidth: \"150px\",\n    minHeight: \"30px\",\n    borderRadius: 5,\n    \"&:hover\": {\n      color: \"pink\",\n    },\n    marginBottom: 10,\n    marginTop: 10,\n  },\n  textStyle: {\n    position: \"absolute\",\n    top: 104,\n    fontSize: 16,\n    fontFamily: \"Lato\",\n  },\n  root: {\n    padding: theme.spacing() * 2,\n  },\n}));\n\nconst Recommender = (props) => {\n  const [recommendedMovieList, setRecommendedMovieList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const preferredMovies = useSelector(selectPreferredMovies);\n\n  const { movie, setMovie, colSize = {}, height = 300, breadth = 200 } = props;\n  const classes = useStyles();\n\n  function getCols(screenWidth) {\n    if (isWidthUp(\"lg\", screenWidth)) {\n      return colSize?.lg ?? 6;\n    }\n\n    if (isWidthUp(\"md\", screenWidth)) {\n      return colSize?.md ?? 4;\n    }\n    if (isWidthUp(\"sm\", screenWidth)) {\n      return colSize?.sm ?? 3;\n    }\n\n    return colSize?.xs ?? 2;\n  }\n\n  const cols = getCols(props.width); // width is associated when using withWidth()\n\n  const searchMovie = (data) => {\n    if (data) {\n      // fetch(`${API_ADDRESS}${imdbId}`)\n      // .then((response) => response.json())\n      // .then((json) => {\n      //   if (json.Response !== \"False\") {\n      //     // setState({ ...state, movie: json });\n      //     json.index = index;\n      //     setMovie(json);\n      //     // setQuery(\"\");\n      //   }\n      // })\n      // .catch((error) => {\n      //   alert(error.message);\n      // });\n      setMovie(data);\n    }\n  };\n  const searchRecommendation = (movie) => {\n    console.log(preferredMovies);\n    if (\n      preferredMovies?.length !== 0 &&\n      preferredMovies &&\n      typeof preferredMovies !== \"undefined\"\n    ) {\n      Axios.post(\n        RECOMMEND_API_ADDRESS,\n        {\n          preferred_movies: preferredMovies,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n        .then(async (response) => {\n          console.log(response);\n          // setState({ ...state, movie: json });\n          const movies = await Promise.all(\n            response.data.movie.map(async (movie, index) => {\n              let omdbRes;\n              try {\n                omdbRes = await Axios.get(`${API_ADDRESS}${movie.imdbId}`);\n              } catch (err) {\n                console.log(err);\n              }\n\n              try {\n                const res = await Axios.get(\n                  \"https://image.tmdb.org/t/p/w185\" + movie.posterPath\n                );\n                if (res.data === \"<h1>File not Found</h1>\") throw Error;\n                movie.posterPath =\n                  \"https://image.tmdb.org/t/p/w185\" + movie.posterPath;\n              } catch (err) {\n                // console.log(res);\n                movie.posterPath = omdbRes?.data?.Poster ?? \"Unknown\";\n              }\n              movie = { ...movie, ...omdbRes.data };\n\n              return movie;\n            })\n          );\n\n          setRecommendedMovieList(movies);\n          setLoading(false);\n          // setQuery(\"\");\n        })\n        .catch((error) => alert(error.message));\n    } else {\n      Axios.get(RECOMMEND_API_ADDRESS)\n        .then(async (response) => {\n          console.log(response);\n          // setState({ ...state, movie: json });\n          const movies = await Promise.all(\n            response.data.movies.map(async (movie, index) => {\n              let omdbRes;\n              try {\n                omdbRes = await Axios.get(`${API_ADDRESS}${movie.imdbId}`);\n              } catch (err) {\n                console.log(err);\n              }\n\n              try {\n                const res = await Axios.get(\n                  \"https://image.tmdb.org/t/p/w185\" + movie.posterPath\n                );\n                if (res.data === \"<h1>File not Found</h1>\") throw Error;\n                movie.posterPath =\n                  \"https://image.tmdb.org/t/p/w185\" + movie.posterPath;\n              } catch (err) {\n                // console.log(res);\n                movie.posterPath = omdbRes?.data?.Poster ?? \"Unknown\";\n              }\n              movie = { ...movie, ...omdbRes.data };\n\n              return movie;\n            })\n          );\n\n          setRecommendedMovieList(movies);\n          setLoading(false);\n          // setQuery(\"\");\n        })\n        .catch((error) => alert(error.message));\n    }\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    searchRecommendation();\n  }, [preferredMovies]);\n\n  return (\n    <>\n      <Container>\n        {/* <FloatCard>\n        <FlipCard\n          height={height}\n          width={breadth}\n          front={<p>Front</p>}\n          back={<p>Back</p>}\n        />z\n      </FloatCard> */}\n\n        {loading ? (\n          <GridList cols={cols} height={height} spacing={32}>\n            {new Array(10).fill(0).map((value, index) => (\n              <GridListTile key={index}>\n                <Skeleton\n                  animation=\"wave\"\n                  height={height}\n                  width=\"100%\"\n                  variant=\"rect\"\n                />\n                <GridListTileBar\n                  title={\n                    <Skeleton\n                      animation=\"wave\"\n                      height={10}\n                      width=\"80%\"\n                      style={{ marginBottom: 6 }}\n                    />\n                  }\n                  actionIcon={\n                    <Skeleton\n                      animation=\"wave\"\n                      variant=\"circle\"\n                      height={20}\n                      width={20}\n                      style={{ margin: 20 }}\n                    />\n                  }\n                />\n              </GridListTile>\n            ))}\n          </GridList>\n        ) : (\n          <CustomGrid\n            style={{ width: \"100%\" }}\n            // Arbitrary data, should contain keys, possibly heights, etc.\n            data={recommendedMovieList}\n            // Key accessor, instructs grid on how to fet individual keys from the data set\n            keys={(d) => d.index}\n            // Can be a fixed value or an individual data accessor\n            heights={height}\n            // Number of columns\n            columns={cols}\n            // Space between elements\n            margin={100}\n            // Removes the possibility to scroll away from a maximized element\n            lockScroll={false}\n            // Delay when active elements (blown up) are minimized again\n            closeDelay={500}\n            // Regular react-spring configs\n            config={config.slow}\n          >\n            {(data, active, toggle) => (\n              <Cell\n                active={active}\n                toggle={toggle}\n                data={data}\n                height={height}\n                width={breadth}\n                searchMovie={searchMovie}\n              />\n            )}\n          </CustomGrid>\n        )}\n        {/* <GridList\n        cellHeight={height}\n        cols={cols}\n        spacing={32}\n        className={classes.root}\n      >\n        {loading\n          ? new Array(10).fill(0).map((value, index) => (\n              <GridListTile cols={movie?.cols || 1}>\n                <Skeleton\n                  animation=\"wave\"\n                  height={height}\n                  width={breadth}\n                  variant=\"rect\"\n                />\n                <GridListTileBar\n                  title={\n                    <Skeleton\n                      animation=\"wave\"\n                      height={10}\n                      width=\"80%\"\n                      style={{ marginBottom: 6 }}\n                    />\n                  }\n                  actionIcon={\n                    <Skeleton\n                      animation=\"wave\"\n                      variant=\"circle\"\n                      height={20}\n                      width={20}\n                      style={{ margin: 20 }}\n                    />\n                  }\n                />\n              </GridListTile>\n            ))\n          : recommendedMovieList.map((movie, index) => (\n              <GridListTile\n                key={index}\n                cols={movie?.cols ?? 1}\n                // component={FloatCard}\n              >\n                <FlipCard\n                  height={height}\n                  width={breadth}\n                  front={\n                    <img\n                      onClick={() => {\n                        searchMovie(movie);\n                      }}\n                      style={{ height: height, width: breadth }}\n                      src={movie?.posterPath}\n                      alt=\"Poster\"\n                    />\n                  }\n                  back={\n                    <div style={{ height: height, width: breadth }}>\n                      <Typography>{movie?.title}</Typography>\n                    </div>\n                  }\n                />\n\n                <GridListTileBar\n                  className={classes.bar}\n                  title={\n                    loading ? (\n                      <Skeleton\n                        animation=\"wave\"\n                        height={10}\n                        width=\"80%\"\n                        style={{ marginBottom: 6 }}\n                      />\n                    ) : (\n                      movie?.title ?? \"Unknown\"\n                    )\n                  }\n                  actionIcon={\n                    <LikeButton data={movie} index={movie?.index ?? 69} />\n                  }\n                />\n              </GridListTile>\n            ))}\n      </GridList> */}\n      </Container>\n    </>\n  );\n};\n\nexport default withWidth()(Recommender);\n","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/ScrollFollow/ScrollFollow.jsx",["238","239","240"],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/SearchComponent/MovieCard.js",["241"],"import {\n  Card,\n  Typography,\n  CardMedia,\n  makeStyles,\n  CardContent,\n  CardHeader,\n  Collapse,\n  CardActions,\n  IconButton,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport clsx from \"clsx\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport LikeButton from \"../LikeButton/LikeButton\";\n\n// const style = {\n//     width: 200,\n//     height: 200,\n//     borderRadius: 100,\n//     objectFit: 'cover'\n// }\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 10,\n  },\n  media: {\n    width: \"100%\",\n    maxHeight: 400,\n    objectFit: \"cover\",\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n}));\n\nconst MovieCard = (props) => {\n  const { movie, index = 69, loading = false } = props;\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        title={\n          loading ? (\n            <Skeleton\n              animation=\"wave\"\n              height={10}\n              width=\"80%\"\n              style={{ marginBottom: 6 }}\n            />\n          ) : (\n            movie?.Title ?? \"Unknown\"\n          )\n        }\n      />\n      {loading ? (\n        <Skeleton animation=\"wave\" variant=\"rect\" />\n      ) : (\n        <CardMedia\n          component=\"img\"\n          className={classes.media}\n          image={movie?.Poster}\n        />\n      )}\n\n      <CardContent>\n        {loading ? (\n          <>\n            <Skeleton\n              animation=\"wave\"\n              height={10}\n              style={{ marginBottom: 6 }}\n            />\n            <Skeleton\n              animation=\"wave\"\n              height={10}\n              style={{ marginBottom: 6 }}\n            />\n            <Skeleton\n              animation=\"wave\"\n              height={10}\n              width=\"80%\"\n              style={{ marginBottom: 6 }}\n            />\n          </>\n        ) : (\n          <>\n            <LikeButton data={movie} index={index} />\n            <Typography align=\"center\">\n              {movie?.Year ?? \"Unknown\"} {movie?.Genre ?? \"Unknown\"}\n              {movie?.Runtime ?? \"Unknown\"}\n            </Typography>\n            {movie?.Ratings?.map((Ratings, index) => {\n              return (\n                <Typography align=\"center\" key={Ratings?.Source ?? index}>\n                  {Ratings?.Source ?? \"Unknown\"}: {Ratings?.Value ?? index}\n                </Typography>\n              );\n            })}\n          </>\n        )}\n      </CardContent>\n      <CardActions>\n        <IconButton\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"Show More\"\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          {loading ? (\n            <>\n              <Skeleton\n                animation=\"wave\"\n                height={10}\n                style={{ marginBottom: 6 }}\n              />\n              <Skeleton\n                animation=\"wave\"\n                height={10}\n                width=\"80%\"\n                style={{ marginBottom: 6 }}\n              />\n            </>\n          ) : (\n            <>\n              <Typography align=\"center\">\n                {movie?.Actors ?? \"Unknown\"}\n              </Typography>\n              <Typography align=\"center\">\n                BoxOffice: {movie?.BoxOffice ?? \"Unknown\"}\n              </Typography>\n              <Typography variant=\"body1\" align=\"justify\">\n                {movie?.Plot ?? \"Unknown\"}\n              </Typography>\n            </>\n          )}\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n};\n\nexport default React.memo(MovieCard);\n",["242","243"],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/FlipCard/FlipCard.js",[],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/frontPage/MovieCard.jsx",["244","245","246","247","248"],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/FloatCard/FloatCard.jsx",[],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/themes/theme.js",[],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/views/Layout/Home.js",["249","250","251","252"],"import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport TopNavBar from \"../../components/AppBar/TopNavBar\";\nimport Login from \"./auth/Login\";\nimport Register from \"./auth/Register\";\nimport Layout from \"./Layout\";\nimport UserPickLayout from \"./UserPickLayout\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadUser } from \"../../features/Auth/loadUser\";\nimport {\n  selectIsAuthenticated,\n  selectToken,\n} from \"../../features/Auth/registerSlice\";\nimport Profile from \"./Profile\";\nconst Home = (props) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    loadUser(dispatch);\n  }, []);\n\n  console.log(props);\n  return (\n    <Router>\n      <TopNavBar />\n      <Switch>\n        <Route exact path=\"/movie-recommender-frontend/\" component={Layout} />\n        <Route\n          exact\n          path=\"/movie-recommender-frontend/login\"\n          component={Login}\n        />\n        <Route\n          exact\n          path=\"/movie-recommender-frontend/register\"\n          component={Register}\n        />\n        <Route\n          exact\n          path=\"/movie-recommender-frontend/select\"\n          component={UserPickLayout}\n        />\n        <Route\n          exact\n          path=\"/movie-recommender-frontend/dashboard\"\n          component={Layout}\n        />\n        <Route\n          exact\n          path=\"/movie-recommender-frontend/profile\"\n          component={Profile}\n        />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Home;\n","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/views/Layout/auth/Login.js",["253","254","255"],"import React, { useEffect, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../../App/App.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSnackbar } from \"../../../features/Snackbar/snackbarSlice\";\nimport {\n  failure,\n  success,\n  userLoaded,\n  selectIsAuthenticated,\n  selectUser,\n} from \"../../../features/Auth/registerSlice\";\n\nexport const Login = () => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const authenticated = useSelector(selectIsAuthenticated);\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const { email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const User = {\n      email,\n      password,\n    };\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n\n      const body = JSON.stringify(User);\n      const res = await axios.post(\n        \"https://vae-login.herokuapp.com/api/auth\",\n        body,\n        config\n      );\n      dispatch(success(res.data));\n      dispatch(\n        setSnackbar({\n          snackbarOpen: true,\n          snackbarType: \"success\",\n          snackbarMessage: ` Welcome `,\n        })\n      );\n      console.log(res.data);\n    } catch (err) {\n      console.error(err.response);\n      dispatch(\n        setSnackbar({\n          snackbarOpen: true,\n          snackbarType: \"error\",\n          snackbarMessage: \"Invalid Credentials\",\n        })\n      );\n      dispatch(\n        failure({\n          type: \"LOGIN_FAIL\",\n        })\n      );\n    }\n  };\n\n  //Redirect if logged in\n  if (authenticated) {\n    console.log(\"Inside if\");\n\n    dispatch(\n      setSnackbar({\n        snackbarOpen: true,\n        snackbarType: \"success\",\n        snackbarMessage: ` Welcome Back `,\n      })\n    );\n    return (\n      <Redirect\n        from=\"/movie-recommender-frontend/login\"\n        to=\"/movie-recommender-frontend/dashboard\"\n      />\n    );\n  }\n  return (\n    <div className=\"container\">\n      <h1 className=\"large text-primary\"> Sign In </h1>{\" \"}\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"> </i> Sign into Your Account{\" \"}\n      </p>{\" \"}\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group\">\n          <input\n            type=\"email\"\n            placeholder=\"Email Address\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>{\" \"}\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => onChange(e)}\n            name=\"password\"\n            minLength=\"6\"\n          />\n        </div>{\" \"}\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n      </form>{\" \"}\n      <p className=\"my-1\">\n        Don 't have an account?{\" \"}\n        <Link to=\"/movie-recommender-frontend/register\"> Sign Up </Link>{\" \"}\n      </p>{\" \"}\n    </div>\n  );\n};\nexport default Login;\n","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/views/Layout/auth/Register.js",[],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/LikeButton/LikeButton.jsx",["256","257","258"],"import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport lottie from \"lottie-web/build/player/lottie_light\";\nimport starDarkAniamtion from \"../../assets/lottie/star-dark.json\";\nimport { IconButton } from \"@material-ui/core\";\nimport Axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  addMovie,\n  removeMovie,\n  selectPreferredMovies,\n  selectToken,\n} from \"../../features/Auth/registerSlice\";\n\nconst addToPreference = async (index, token = \"\", add = true) => {\n  const operation = add ? \"add\" : \"remove\";\n  try {\n    await Axios.post(\n      `https://vae-login.herokuapp.com/api/${operation}-movie`,\n      {\n        index: index,\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-auth-token\": token,\n        },\n      }\n    );\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst LikeButton = (props) => {\n  const [liked, setLiked] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const { index, height = 50, width = 50 } = props;\n\n  const [animation, setAnimation] = useState(null);\n  const token = useSelector(selectToken);\n  const dispatch = useDispatch();\n  const container = useRef(null);\n  const preferredMovies = useSelector(selectPreferredMovies);\n\n  useEffect(() => {\n    const loadAnimation = () =>\n      lottie.loadAnimation({\n        container: container.current,\n        name: index,\n        animationData: starDarkAniamtion,\n        renderer: \"svg\",\n        loop: false,\n        autoplay: false,\n      });\n    setAnimation(loadAnimation());\n  }, []);\n\n  useEffect(() => {\n    if (preferredMovies?.includes(index)) {\n      setLoaded(true);\n      setLiked(true);\n    }\n  }, [preferredMovies, index]);\n  useEffect(() => {\n    console.log(liked);\n    if (!animation) return;\n    if (!loaded) return;\n    if (liked) {\n      lottie.setSpeed(1);\n      lottie.setDirection(1);\n      lottie.play(index);\n      dispatch(addMovie({ index: index }));\n    } else {\n      lottie.setDirection(-1);\n      lottie.setSpeed(2);\n      lottie.play(index);\n      dispatch(removeMovie({ index: index }));\n    }\n    addToPreference(index, token, liked);\n  }, [liked, token]);\n  const handleLike = () => {\n    setLoaded(true);\n    setLiked(!liked);\n  };\n\n  return (\n    <IconButton onClick={handleLike}>\n      <div ref={container} style={{ height: height, width: width }} />\n    </IconButton>\n  );\n};\nexport default React.memo(LikeButton);\n","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/ScrollTop/ScrollTop.jsx",[],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/features/Auth/utils/setAuthToken.js",[],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/Recommender/data.js",["259"],"export default [\n  {\n    name: \"Rare Wind\",\n    description: \"#a8edea → #fed6e3\",\n    css: \"linear-gradient(to top, #a8edea 0%, #fed6e3 100%)\",\n    height: 100,\n  },\n  {\n    name: \"Saint Petersburg\",\n    description: \"#f5f7fa → #c3cfe2\",\n    css: \"linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)\",\n    height: 200,\n  },\n  {\n    name: \"Deep Blue\",\n    description: \"#e0c3fc → #8ec5fc\",\n    css: \"linear-gradient(120deg, #e0c3fc 0%, #8ec5fc 100%)\",\n    height: 200,\n  },\n  {\n    name: \"Ripe Malinka\",\n    description: \"#f093fb → #f5576c\",\n    css: \"linear-gradient(120deg, #f093fb 0%, #f5576c 100%)\",\n    height: 200,\n  },\n  {\n    name: \"Perfect White\",\n    description: \"#fdfbfb → #ebedee\",\n    css: \"linear-gradient(-225deg, #E3FDF5 0%, #FFE6FA 100%)\",\n    height: 200,\n  },\n  {\n    name: \"Near Moon\",\n    description: \"#5ee7df → #b490ca\",\n    css: \"linear-gradient(to top, #5ee7df 0%, #b490ca 100%)\",\n    height: 200,\n  },\n  {\n    name: \"Wild Apple\",\n    description: \"#d299c2 → #fef9d7\",\n    css: \"linear-gradient(to top, #d299c2 0%, #fef9d7 100%)\",\n    height: 100,\n  },\n  {\n    name: \"Ladoga Bottom\",\n    description: \"#ebc0fd → #d9ded8\",\n    css: \"linear-gradient(to top, #ebc0fd 0%, #d9ded8 100%)\",\n    height: 200,\n  },\n  {\n    name: \"Sunny Morning\",\n    description: \"#f6d365 → #fda085\",\n    css: \"linear-gradient(120deg, #f6d365 0%, #fda085 100%)\",\n    height: 100,\n  },\n  {\n    name: \"Lemon Gate\",\n    description: \"#96fbc4 → #f9f586\",\n    css: \"linear-gradient(to top, #96fbc4 0%, #f9f586 100%)\",\n    height: 200,\n  },\n  {\n    name: \"Salt Mountain\",\n    description: \" #FFFEFF → #D7FFFE\",\n    css: \"linear-gradient(-225deg, #FFFEFF 0%, #D7FFFE 100%)\",\n    height: 100,\n  },\n  {\n    name: \"New York\",\n    description: \" #fff1eb → #ace0f9\",\n    css: \"linear-gradient(to top, #fff1eb 0%, #ace0f9 100%)\",\n    height: 200,\n  },\n  {\n    name: \"Soft Grass\",\n    description: \" #c1dfc4 → #deecdd\",\n    css: \"linear-gradient(to top, #c1dfc4 0%, #deecdd 100%)\",\n    height: 200,\n  },\n  {\n    name: \"Japan Blush\",\n    description: \" #ddd6f3 → #faaca8\",\n    css: \"linear-gradient(-20deg, #ddd6f3 0%, #faaca8 100%, #faaca8 100%)\",\n    height: 100,\n  },\n];\n","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/ScrollFollow/useScrollPosition.js",["260"],"import { useRef, useLayoutEffect } from \"react\";\n\nconst isBrowser = typeof window !== `undefined`;\n\nfunction getScrollPosition({ element, useWindow }) {\n  if (!isBrowser) return { x: 0, y: 0 };\n\n  const target = element ? element.current : document.body;\n  const position = target.getBoundingClientRect();\n\n  return useWindow\n    ? { x: window.scrollX, y: window.scrollY }\n    : { x: position.left, y: position.top };\n}\n\nexport function useScrollPosition(effect, deps, element, useWindow, wait) {\n  const position = useRef(getScrollPosition({ useWindow }));\n\n  let throttleTimeout = null;\n\n  const callBack = () => {\n    const currPos = getScrollPosition({ element, useWindow });\n    effect({ prevPos: position.current, currPos });\n    position.current = currPos;\n    throttleTimeout = null;\n  };\n\n  useLayoutEffect(() => {\n    const handleScroll = () => {\n      if (wait) {\n        if (throttleTimeout === null) {\n          throttleTimeout = setTimeout(callBack, wait);\n        }\n      } else {\n        callBack();\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, deps);\n}\n","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/SearchComponent/MovieAutoComplete.js",[],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/Grid/Primitives.js",[],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/features/Auth/loadUser.js",["261","262","263"],"import setAuthToken from \"./utils/setAuthToken\";\nimport { userLoaded, failure, selectToken } from \"./registerSlice\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\n//Load User\nexport const loadUser = async (dispatch) => {\n  const token = localStorage.getItem(\"token\");\n  if (token && typeof token !== \"undefined\") {\n    console.log(\"Load\");\n    console.log(token);\n    try {\n      const res = await axios.get(\"https://vae-login.herokuapp.com/api/auth\", {\n        headers: {\n          \"x-auth-token\": token,\n        },\n      });\n      console.log(\"User Data\");\n      console.log(res);\n      dispatch(userLoaded(res.data));\n    } catch (err) {\n      console.log(\"Failure to load Data From Token\");\n      console.log(err);\n      dispatch(\n        failure({\n          type: \"auth_error\",\n        })\n      );\n    }\n  }\n};\n","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/views/App/App.js",["264"],"import React, { useEffect } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\n/* import Layout from \"../Layout/Layout\"; */\nimport { Provider } from \"react-redux\";\nimport CustomThemeProvider from \"../../CustomThemeProvider\";\nimport store from \"../../store\";\nimport CustomizedSnackbars from \"../../features/Snackbar/Snackbar\";\nimport Home from \"../Layout/Home\";\n\nconst App = () => {\n  return (\n    <CustomThemeProvider>\n      <Provider store={store}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon.  */}\n        <CssBaseline />\n        <CustomizedSnackbars />\n\n        <Home />\n      </Provider>\n    </CustomThemeProvider>\n  );\n};\nexport default App;\n","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/CustomThemeProvider.js",[],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/themes/base.js",[],["265","266"],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/frontPage/imdbList.js",[],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/Draggable/Draggable.js",[],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/frontPage/Contents.jsx",["267","268","269"],"import React from \"react\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport MovieCard from \"./MovieCard\";\nimport Footer from \"./Footer\";\n// import movieList from './data'\n// https://image.tmdb.org/t/p/w185\n// import {useState} from 'react';\n// import axios from 'axios';\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  addMovie,\n  selectIsAuthenticated,\n  selectToken,\n} from \"../../features/Auth/registerSlice\";\nimport { Redirect } from \"react-router\";\n\nconst API_ADDRESS = \"https://www.omdbapi.com/?apikey=e4c29baa&i=\";\n\nconst addToPreferenceAPI = async (index, token = \"\", add = true) => {\n  const operation = add ? \"add\" : \"remove\";\n  try {\n    await Axios.post(\n      `https://vae-login.herokuapp.com/api/${operation}-movie`,\n      {\n        index: index,\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-auth-token\": token,\n        },\n      }\n    );\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst Contents = () => {\n  const [movieList, setMovieList] = useState([]);\n  const [selectedMovieList, setSelectedMovieList] = useState([]);\n  const [movieIndex, setMovieIndex] = useState([]);\n\n  const [selectButtonClicked, setSelectButtonClicked] = useState(false);\n  const token = useSelector(selectToken);\n  const isAuthenticated = useSelector(selectIsAuthenticated);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    async function fetchData() {\n      await axios\n        .get(\"https://movie-database-server.herokuapp.com/api/items\")\n        .then(async (res) => {\n          const movies = await Promise.all(\n            res.data.map(async (movie, index) => {\n              let omdbRes;\n              try {\n                omdbRes = await Axios.get(`${API_ADDRESS}${movie.imdbId}`);\n              } catch (err) {\n                console.log(err);\n              }\n\n              try {\n                const res = await Axios.get(\n                  \"https://image.tmdb.org/t/p/w185\" + movie.posterPath\n                );\n                if (res.data === \"<h1>File not Found</h1>\") throw Error;\n                movie.posterPath =\n                  \"https://image.tmdb.org/t/p/w185\" + movie.posterPath;\n              } catch (err) {\n                // console.log(res);\n                movie.posterPath = omdbRes?.data?.Poster ?? \"Unknown\";\n              }\n              movie = { ...movie, ...omdbRes.data };\n\n              return movie;\n            })\n          );\n\n          // console.log(\"TEST MOVIE\");\n          // console.table(movies);\n\n          setMovieList(movies);\n          setMovieIndex(\n            movies.map((movie) => {\n              return movie.index;\n            })\n          );\n          // console.log(res.data);\n        })\n        .catch((error) => alert(error.message));\n    }\n    fetchData();\n  }, []);\n\n  const [check, setCheck] = useState(false);\n\n  function getRandom(arr, n) {\n    var result = new Array(n),\n      len = arr.length,\n      taken = new Array(len);\n    if (n > len) {\n      throw new RangeError(\"getRandom: more elements taken than available\");\n    }\n    while (n--) {\n      var x = Math.floor(Math.random() * len);\n      result[n] = arr[x in taken ? taken[x] : x];\n      taken[x] = --len in taken ? taken[len] : len;\n    }\n    return result;\n  }\n\n  async function getAllDetails(detailsList) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ title: detailsList }),\n    };\n\n    return fetch(\n      \"https://movie-database-server.herokuapp.com/api/items/singleItem\",\n      requestOptions\n    )\n      .then(async (response) => {\n        const data = await response.json();\n        // check for error response\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = (data && data.message) || response.status;\n          return Promise.reject(error);\n        }\n        // console.log(data);\n        return data;\n      })\n\n      .catch((error) => {\n        console.error(\"There was an error!\", error);\n      });\n  }\n\n  async function getDetails(data, index) {\n    console.log(\"DATA\");\n    console.log(data);\n    try {\n      var detailsList = [];\n      await Promise.all(\n        data.map((Details) =>\n          (async function () {\n            let data = await getAllDetails(Details);\n            // console.log(data)\n            if (data[0] !== undefined) {\n              detailsList.push(data[0]);\n            }\n          })()\n        )\n      );\n\n      // console.log(det);\n      // console.log(detailsList);\n\n      // console.log(\"DETAILS LIST\");\n      // console.log(detailsList);\n      var fourRndom = getRandom(detailsList, 4);\n      // console.log(fourRndom);\n\n      const movies = await Promise.all(\n        fourRndom.map(async (movie, index) => {\n          let omdbRes;\n          try {\n            omdbRes = await Axios.get(`${API_ADDRESS}${movie.imdbId}`);\n          } catch (err) {\n            console.log(err);\n          }\n\n          try {\n            const res = await Axios.get(\n              \"https://image.tmdb.org/t/p/w185\" + movie.posterPath\n            );\n            if (res.data === \"<h1>File not Found</h1>\") throw Error;\n            movie.posterPath =\n              \"https://image.tmdb.org/t/p/w185\" + movie.posterPath;\n          } catch (err) {\n            // console.log(res);\n            movie.posterPath = omdbRes?.data?.Poster ?? \"Unknown\";\n          }\n          movie = { ...movie, ...omdbRes.data };\n\n          return movie;\n        })\n      );\n\n      const movieListFront = movieList.slice(0, movieIndex.indexOf(index) + 1);\n      const movieListBack = movieList.slice(movieIndex.indexOf(index) + 1);\n\n      let updatedMovieList = [];\n      updatedMovieList = movieListFront.concat(fourRndom);\n      updatedMovieList = updatedMovieList.concat(movieListBack);\n\n      // console.log(\"Updated Movie List\");\n      // console.log(updatedMovieList);\n      // updatedMovieList.splice(movieIndex.indexOf(index) + 1, 4, ...fourRndom);\n\n      setMovieList(updatedMovieList);\n\n      setMovieIndex(\n        updatedMovieList.map((movie) => {\n          return movie.index;\n        })\n      );\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n  const showHide = (selectedList) => {\n    setSelectedMovieList(selectedList);\n    console.log(\"Selected Movie List\" + selectedMovieList);\n\n    if (typeof selectedList === \"undefined\" || selectedList.length < 1) {\n      setCheck(false);\n    } else {\n      setCheck(true);\n    }\n  };\n  const getMovieCard = (movieObj) => {\n    return (\n      <Grid item xs={12} sm={4} md={2}>\n        <MovieCard\n          {...movieObj}\n          showHide={showHide}\n          selectedList={selectedMovieList}\n          setSelectedList={setSelectedMovieList}\n          getDetails={getDetails}\n        />\n      </Grid>\n    );\n  };\n  const addToPreference = async () => {\n    try {\n      dispatch(addMovie({ index: selectedMovieList }));\n\n      addToPreferenceAPI(selectedMovieList, token, true);\n\n      setSelectButtonClicked(true);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  if (selectButtonClicked) {\n    return (\n      <Redirect\n        from=\"/movie-recommender-frontend/select\"\n        to=\"/movie-recommender-frontend/\"\n      />\n    );\n  }\n\n  // console.log(\"Movie List:\");\n  // console.table(movieList);\n\n  // console.log(\"Movie List\" + movieList);\n  // console.log(\"Movie Index\" + movieIndex);\n  return (\n    <Grid\n      direction=\"row\"\n      item\n      justify=\"center\"\n      alignItems=\"center\"\n      container\n      spacing={2}\n    >\n      {movieList.map((movieObj) => getMovieCard(movieObj))}\n\n      <Footer check={check} onClickFinished={addToPreference} />\n    </Grid>\n  );\n};\n\nexport default Contents;\n","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/ScrollFollow/useMousePosition.js",[],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/Grid/CustomGrid.js",[],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/store.js",[],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/views/Layout/UserPickLayout.js",["270","271"],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/frontPage/Header.jsx",[],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/AppBar/HideOnScroll.jsx",[],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/frontPage/oscar_data.js",[],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/views/Layout/Layout.js",["272","273","274","275","276"],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/frontPage/Footer.jsx",[],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/index.js",["277"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport UserProfileUi from \"./components/frontPage/userProfileUi\";\n// import \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./views/App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/frontPage/userProfileUi.js",[],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/Recommender/Cell.js",["278","279","280","281","282","283","284","285","286"],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/views/Layout/Profile.js",["287","288","289","290"],"import { Avatar, Container, Toolbar, Typography } from \"@material-ui/core\";\nimport { SignalCellularNull } from \"@material-ui/icons\";\nimport Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadUser } from \"../../features/Auth/loadUser\";\nimport { selectToken, selectUser } from \"../../features/Auth/registerSlice\";\n\nconst preferredMoviesURI =\n  \"https://vae-login.herokuapp.com/api/profile/preferred_movies\";\nconst Profile = () => {\n  const user = useSelector(selectUser);\n\n  const token = useSelector(selectToken);\n  const [movieList, setMovieList] = useState();\n  const func = async () => {\n    const res = await Axios.get(preferredMoviesURI, {\n      headers: {\n        \"x-auth-token\": token,\n      },\n    });\n\n    setMovieList(res.data);\n  };\n\n  useEffect(() => {\n    func();\n  }, []);\n  return (\n    <>\n      <Toolbar />\n      <Container>\n        <Avatar alt=\"Name\" src={user.avatar} />\n        <Typography>{user.name}</Typography>\n        <Typography>{user.email}</Typography>\n        {typeof movieList !== \"undefined\"\n          ? movieList.map((movie) => <Typography>{movie.title}</Typography>)\n          : null}\n      </Container>\n    </>\n  );\n};\n\nexport default Profile;\n",["291","292"],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/themes/light.js",[],"/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/components/SearchComponent/MovieSearchCard.js",["293","294"],"import React, { useEffect, useState } from \"react\";\nimport MovieCard from \"./MovieCard\";\nimport { Card, CardContent, CardHeader } from \"@material-ui/core\";\nimport MovieAutoComplete from \"./MovieAutoComplete\";\nconst API_ADDRESS = \"https://www.omdbapi.com/?apikey=e4c29baa&t=\";\n\n// const AUTOCOMPLETE_API_ADDRESS =\n//   \"https://api.themoviedb.org/3/search/movie?api_key=ea575fa4bf65c424e93e0c032ab5c5f2&language=en-US&query=\";\n// const AUTOCOMPLETE_TOP_API_ADDRESS =\n//   \"https://api.themoviedb.org/3/movie/top_rated?api_key=ea575fa4bf65c424e93e0c032ab5c5f2&language=en-US&page=1\";\n\n// const style = {\n//   width: 200,\n//   height: 200,\n//   borderRadius: 100,\n//   objectFit: \"cover\",\n// };\n\nconst MovieSearchCard = (props) => {\n  // const [state, setState] = useState({ movieQuery: \"\", movie: \"\" });\n  const [movieSelected, setMovieSelected] = useState(\"\");\n\n  const {movie, setMovie} = props\n  useEffect(() => {\n    fetch(`${API_ADDRESS}avengers`)\n      .then((response) => response.json())\n      .then((json) => {\n        // console.log(json);\n        setMovie(json);\n        // setState({ movie: json });\n      })\n      .catch((error) => alert(error.message));\n  }, []);\n\n  useEffect(() => {\n    const searchMovie = () => {\n      if (movieSelected !== \"\") {\n        fetch(`${API_ADDRESS} + ${movieSelected.title}`)\n          .then((response) => response.json())\n          .then((json) => {\n            if (json.Response !== \"False\") {\n              // setState({ ...state, movie: json });\n              setMovie(json);\n              // setQuery(\"\");\n            }\n          })\n          .catch((error) => alert(error.message));\n      }\n    };\n\n    if (typeof movieSelected !== \"undefined\") {\n      console.log(movieSelected);\n      searchMovie();\n    }\n  }, [movieSelected]);\n\n  // console.log(query);\n  return (\n    <>\n      <Card>\n        <CardHeader title=\"Movie Search\" />\n        <CardContent>\n          {/* <Typography variant=\"h5\">Movie Search</Typography> */}\n\n          <MovieAutoComplete setMovieSelected={setMovieSelected} />\n        </CardContent>\n      </Card>\n      {movie ? <MovieCard movie={movie} /> : null}\n    </>\n  );\n};\n\nexport default MovieSearchCard;\n","/home/sahasp/Projects/Web/react/movie-recommender-frontend/src/features/Snackbar/snackbarSlice.js",[],{"ruleId":"295","replacedBy":"296"},{"ruleId":"297","replacedBy":"298"},{"ruleId":"295","replacedBy":"299"},{"ruleId":"297","replacedBy":"300"},{"ruleId":"295","replacedBy":"301"},{"ruleId":"297","replacedBy":"302"},{"ruleId":"303","severity":1,"message":"304","line":9,"column":3,"nodeType":"305","messageId":"306","endLine":9,"endColumn":8},{"ruleId":"303","severity":1,"message":"307","line":20,"column":3,"nodeType":"305","messageId":"306","endLine":20,"endColumn":7},{"ruleId":"303","severity":1,"message":"308","line":21,"column":3,"nodeType":"305","messageId":"306","endLine":21,"endColumn":6},{"ruleId":"303","severity":1,"message":"309","line":22,"column":11,"nodeType":"305","messageId":"306","endLine":22,"endColumn":18},{"ruleId":"303","severity":1,"message":"310","line":27,"column":8,"nodeType":"305","messageId":"306","endLine":27,"endColumn":27},{"ruleId":"303","severity":1,"message":"311","line":28,"column":8,"nodeType":"305","messageId":"306","endLine":28,"endColumn":16},{"ruleId":"303","severity":1,"message":"312","line":104,"column":11,"nodeType":"305","messageId":"306","endLine":104,"endColumn":17},{"ruleId":"295","replacedBy":"313"},{"ruleId":"297","replacedBy":"314"},{"ruleId":"303","severity":1,"message":"315","line":9,"column":3,"nodeType":"305","messageId":"306","endLine":9,"endColumn":8},{"ruleId":"303","severity":1,"message":"316","line":10,"column":3,"nodeType":"305","messageId":"306","endLine":10,"endColumn":13},{"ruleId":"303","severity":1,"message":"317","line":14,"column":8,"nodeType":"305","messageId":"306","endLine":14,"endColumn":17},{"ruleId":"303","severity":1,"message":"318","line":17,"column":8,"nodeType":"305","messageId":"306","endLine":17,"endColumn":12},{"ruleId":"303","severity":1,"message":"319","line":20,"column":8,"nodeType":"305","messageId":"306","endLine":20,"endColumn":16},{"ruleId":"303","severity":1,"message":"320","line":64,"column":11,"nodeType":"305","messageId":"306","endLine":64,"endColumn":16},{"ruleId":"303","severity":1,"message":"321","line":65,"column":9,"nodeType":"305","messageId":"306","endLine":65,"endColumn":16},{"ruleId":"322","severity":1,"message":"323","line":196,"column":6,"nodeType":"324","endLine":196,"endColumn":23,"suggestions":"325"},{"ruleId":"303","severity":1,"message":"326","line":1,"column":10,"nodeType":"305","messageId":"306","endLine":1,"endColumn":20},{"ruleId":"303","severity":1,"message":"327","line":1,"column":22,"nodeType":"305","messageId":"306","endLine":1,"endColumn":38},{"ruleId":"303","severity":1,"message":"328","line":2,"column":17,"nodeType":"305","messageId":"306","endLine":2,"endColumn":28},{"ruleId":"303","severity":1,"message":"329","line":12,"column":17,"nodeType":"305","messageId":"306","endLine":12,"endColumn":26},{"ruleId":"295","replacedBy":"330"},{"ruleId":"297","replacedBy":"331"},{"ruleId":"303","severity":1,"message":"332","line":13,"column":8,"nodeType":"305","messageId":"306","endLine":13,"endColumn":20},{"ruleId":"303","severity":1,"message":"333","line":48,"column":10,"nodeType":"305","messageId":"306","endLine":48,"endColumn":19},{"ruleId":"303","severity":1,"message":"334","line":48,"column":21,"nodeType":"305","messageId":"306","endLine":48,"endColumn":33},{"ruleId":"303","severity":1,"message":"335","line":50,"column":9,"nodeType":"305","messageId":"306","endLine":50,"endColumn":17},{"ruleId":"322","severity":1,"message":"336","line":156,"column":6,"nodeType":"324","endLine":156,"endColumn":19,"suggestions":"337"},{"ruleId":"303","severity":1,"message":"338","line":9,"column":23,"nodeType":"305","messageId":"306","endLine":9,"endColumn":34},{"ruleId":"303","severity":1,"message":"339","line":12,"column":3,"nodeType":"305","messageId":"306","endLine":12,"endColumn":24},{"ruleId":"303","severity":1,"message":"340","line":13,"column":3,"nodeType":"305","messageId":"306","endLine":13,"endColumn":14},{"ruleId":"322","severity":1,"message":"341","line":21,"column":6,"nodeType":"324","endLine":21,"endColumn":8,"suggestions":"342"},{"ruleId":"303","severity":1,"message":"329","line":1,"column":17,"nodeType":"305","messageId":"306","endLine":1,"endColumn":26},{"ruleId":"303","severity":1,"message":"343","line":10,"column":3,"nodeType":"305","messageId":"306","endLine":10,"endColumn":13},{"ruleId":"303","severity":1,"message":"344","line":22,"column":9,"nodeType":"305","messageId":"306","endLine":22,"endColumn":13},{"ruleId":"303","severity":1,"message":"345","line":1,"column":28,"nodeType":"305","messageId":"306","endLine":1,"endColumn":35},{"ruleId":"322","severity":1,"message":"346","line":56,"column":6,"nodeType":"324","endLine":56,"endColumn":8,"suggestions":"347"},{"ruleId":"322","severity":1,"message":"348","line":80,"column":6,"nodeType":"324","endLine":80,"endColumn":20,"suggestions":"349"},{"ruleId":"350","severity":1,"message":"351","line":1,"column":1,"nodeType":"352","endLine":86,"endColumn":3},{"ruleId":"322","severity":1,"message":"353","line":32,"column":29,"nodeType":"354","endLine":32,"endColumn":55},{"ruleId":"303","severity":1,"message":"355","line":1,"column":8,"nodeType":"305","messageId":"306","endLine":1,"endColumn":20},{"ruleId":"303","severity":1,"message":"340","line":2,"column":31,"nodeType":"305","messageId":"306","endLine":2,"endColumn":42},{"ruleId":"303","severity":1,"message":"338","line":4,"column":10,"nodeType":"305","messageId":"306","endLine":4,"endColumn":21},{"ruleId":"303","severity":1,"message":"329","line":1,"column":17,"nodeType":"305","messageId":"306","endLine":1,"endColumn":26},{"ruleId":"295","replacedBy":"356"},{"ruleId":"297","replacedBy":"357"},{"ruleId":"303","severity":1,"message":"358","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":19},{"ruleId":"303","severity":1,"message":"359","line":49,"column":9,"nodeType":"305","messageId":"306","endLine":49,"endColumn":24},{"ruleId":"303","severity":1,"message":"360","line":169,"column":13,"nodeType":"305","messageId":"306","endLine":169,"endColumn":19},{"ruleId":"303","severity":1,"message":"358","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":19},{"ruleId":"303","severity":1,"message":"361","line":5,"column":8,"nodeType":"305","messageId":"306","endLine":5,"endColumn":19},{"ruleId":"303","severity":1,"message":"329","line":1,"column":17,"nodeType":"305","messageId":"306","endLine":1,"endColumn":26},{"ruleId":"303","severity":1,"message":"358","line":3,"column":3,"nodeType":"305","messageId":"306","endLine":3,"endColumn":12},{"ruleId":"303","severity":1,"message":"316","line":8,"column":3,"nodeType":"305","messageId":"306","endLine":8,"endColumn":13},{"ruleId":"303","severity":1,"message":"362","line":10,"column":8,"nodeType":"305","messageId":"306","endLine":10,"endColumn":26},{"ruleId":"303","severity":1,"message":"363","line":16,"column":10,"nodeType":"305","messageId":"306","endLine":16,"endColumn":14},{"ruleId":"303","severity":1,"message":"364","line":3,"column":8,"nodeType":"305","messageId":"306","endLine":3,"endColumn":21},{"ruleId":"303","severity":1,"message":"365","line":2,"column":3,"nodeType":"305","messageId":"306","endLine":2,"endColumn":9},{"ruleId":"303","severity":1,"message":"366","line":4,"column":3,"nodeType":"305","messageId":"306","endLine":4,"endColumn":14},{"ruleId":"303","severity":1,"message":"367","line":6,"column":3,"nodeType":"305","messageId":"306","endLine":6,"endColumn":13},{"ruleId":"303","severity":1,"message":"368","line":12,"column":8,"nodeType":"305","messageId":"306","endLine":12,"endColumn":13},{"ruleId":"303","severity":1,"message":"369","line":13,"column":8,"nodeType":"305","messageId":"306","endLine":13,"endColumn":13},{"ruleId":"303","severity":1,"message":"370","line":14,"column":17,"nodeType":"305","messageId":"306","endLine":14,"endColumn":26},{"ruleId":"303","severity":1,"message":"371","line":14,"column":28,"nodeType":"305","messageId":"306","endLine":14,"endColumn":32},{"ruleId":"303","severity":1,"message":"372","line":15,"column":10,"nodeType":"305","messageId":"306","endLine":15,"endColumn":14},{"ruleId":"303","severity":1,"message":"373","line":15,"column":16,"nodeType":"305","messageId":"306","endLine":15,"endColumn":20},{"ruleId":"303","severity":1,"message":"374","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":28},{"ruleId":"303","severity":1,"message":"375","line":5,"column":10,"nodeType":"305","messageId":"306","endLine":5,"endColumn":21},{"ruleId":"303","severity":1,"message":"376","line":6,"column":10,"nodeType":"305","messageId":"306","endLine":6,"endColumn":18},{"ruleId":"322","severity":1,"message":"377","line":28,"column":6,"nodeType":"324","endLine":28,"endColumn":8,"suggestions":"378"},{"ruleId":"295","replacedBy":"379"},{"ruleId":"297","replacedBy":"380"},{"ruleId":"322","severity":1,"message":"381","line":33,"column":6,"nodeType":"324","endLine":33,"endColumn":8,"suggestions":"382"},{"ruleId":"322","severity":1,"message":"381","line":55,"column":6,"nodeType":"324","endLine":55,"endColumn":21,"suggestions":"383"},"no-native-reassign",["384"],"no-negated-in-lhs",["385"],["384"],["385"],["384"],["385"],"no-unused-vars","'Slide' is defined but never used.","Identifier","unusedVar","'Zoom' is defined but never used.","'Fab' is defined but never used.","'LinkMUI' is defined but never used.","'KeyboardArrowUpIcon' is defined but never used.","'MailIcon' is defined but never used.","'window' is assigned a value but never used.",["384"],["385"],"'Paper' is defined but never used.","'Typography' is defined but never used.","'FloatCard' is defined but never used.","'data' is defined but never used.","'FlipCard' is defined but never used.","'movie' is assigned a value but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchRecommendation'. Either include it or remove the dependency array.","ArrayExpression",["386"],"'makeStyles' is defined but never used.","'useScrollTrigger' is defined but never used.","'useCallback' is defined but never used.","'useEffect' is defined but never used.",["384"],["385"],"'defaultImage' is defined but never used.","'posterUrl' is assigned a value but never used.","'setPosterUrl' is assigned a value but never used.","'imageRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'selectedList'. Either include it or remove the dependency array.",["387"],"'useSelector' is defined but never used.","'selectIsAuthenticated' is defined but never used.","'selectToken' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["388"],"'userLoaded' is defined but never used.","'user' is assigned a value but never used.","'useMemo' is defined but never used.","React Hook useEffect has a missing dependency: 'index'. Either include it or remove the dependency array.",["389"],"React Hook useEffect has missing dependencies: 'animation', 'dispatch', 'index', and 'loaded'. Either include them or remove the dependency array.",["390"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","Assignments to the 'throttleTimeout' variable from inside React Hook useLayoutEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useLayoutEffect.","CallExpression","'setAuthToken' is defined but never used.",["384"],["385"],"'Container' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'movies' is assigned a value but never used.","'MovieSearch' is defined but never used.","'DraggableComponent' is defined but never used.","'Link' is defined but never used.","'UserProfileUi' is defined but never used.","'Button' is defined but never used.","'CardActions' is defined but never used.","'CardHeader' is defined but never used.","'Close' is defined but never used.","'Axios' is defined but never used.","'Component' is defined but never used.","'lazy' is defined but never used.","'Slug' is defined but never used.","'Fade' is defined but never used.","'SignalCellularNull' is defined but never used.","'useDispatch' is defined but never used.","'loadUser' is defined but never used.","React Hook useEffect has a missing dependency: 'func'. Either include it or remove the dependency array.",["391"],["384"],["385"],"React Hook useEffect has a missing dependency: 'setMovie'. Either include it or remove the dependency array.",["392"],["393"],"no-global-assign","no-unsafe-negation",{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},{"desc":"402","fix":"403"},{"desc":"404","fix":"405"},{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},"Update the dependencies array to be: [preferredMovies, searchRecommendation]",{"range":"410","text":"411"},"Update the dependencies array to be: [props.index, selectedList]",{"range":"412","text":"413"},"Update the dependencies array to be: [dispatch]",{"range":"414","text":"415"},"Update the dependencies array to be: [index]",{"range":"416","text":"417"},"Update the dependencies array to be: [animation, dispatch, index, liked, loaded, token]",{"range":"418","text":"419"},"Update the dependencies array to be: [func]",{"range":"420","text":"421"},"Update the dependencies array to be: [setMovie]",{"range":"422","text":"423"},"Update the dependencies array to be: [movieSelected, setMovie]",{"range":"424","text":"425"},[5572,5589],"[preferredMovies, searchRecommendation]",[4364,4377],"[props.index, selectedList]",[678,680],"[dispatch]",[1573,1575],"[index]",[2162,2176],"[animation, dispatch, index, liked, loaded, token]",[871,873],"[func]",[1171,1173],"[setMovie]",[1763,1778],"[movieSelected, setMovie]"]