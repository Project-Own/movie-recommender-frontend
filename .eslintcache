[{"/home/sahasp/Projects/Web/react/ux-design/src/views/App/App.js":"1","/home/sahasp/Projects/Web/react/ux-design/src/features/Snackbar/Snackbar.js":"2","/home/sahasp/Projects/Web/react/ux-design/src/views/Layout/Layout.js":"3","/home/sahasp/Projects/Web/react/ux-design/src/components/frontPage/ImageSlider.js":"4","/home/sahasp/Projects/Web/react/ux-design/src/components/SearchComponent/MovieSearchCard.js":"5","/home/sahasp/Projects/Web/react/ux-design/src/themes/dark.js":"6","/home/sahasp/Projects/Web/react/ux-design/src/components/frontPage/Header.jsx":"7","/home/sahasp/Projects/Web/react/ux-design/src/components/AppBar/HideOnScroll.jsx":"8","/home/sahasp/Projects/Web/react/ux-design/src/components/frontPage/Footer.jsx":"9","/home/sahasp/Projects/Web/react/ux-design/src/components/frontPage/MovieCard.jsx":"10","/home/sahasp/Projects/Web/react/ux-design/src/components/Grid/CustomGrid.js":"11","/home/sahasp/Projects/Web/react/ux-design/src/components/Grid/Primitives.js":"12","/home/sahasp/Projects/Web/react/ux-design/src/components/Recommender/Cell.js":"13","/home/sahasp/Projects/Web/react/ux-design/src/components/AppBar/TopNavBar.js":"14","/home/sahasp/Projects/Web/react/ux-design/src/views/Layout/auth/Register.js":"15","/home/sahasp/Projects/Web/react/ux-design/src/features/Auth/loadUser.js":"16","/home/sahasp/Projects/Web/react/ux-design/src/views/Layout/auth/Login.js":"17","/home/sahasp/Projects/Web/react/ux-design/src/views/Layout/Home.js":"18","/home/sahasp/Projects/Web/react/ux-design/src/store.js":"19","/home/sahasp/Projects/Web/react/ux-design/src/features/Auth/registerSlice.js":"20","/home/sahasp/Projects/Web/react/ux-design/src/components/ScrollTop.jsx":"21","/home/sahasp/Projects/Web/react/ux-design/src/components/SearchComponent/MovieSearch.js":"22","/home/sahasp/Projects/Web/react/ux-design/src/components/SearchComponent/MovieCard.js":"23","/home/sahasp/Projects/Web/react/ux-design/src/components/LikeButton.jsx":"24","/home/sahasp/Projects/Web/react/ux-design/src/components/FloatCard/FloatCard.jsx":"25","/home/sahasp/Projects/Web/react/ux-design/src/serviceWorker.js":"26","/home/sahasp/Projects/Web/react/ux-design/src/features/Snackbar/snackbarSlice.js":"27","/home/sahasp/Projects/Web/react/ux-design/src/views/Layout/UserPickLayout.js":"28","/home/sahasp/Projects/Web/react/ux-design/src/themes/base.js":"29","/home/sahasp/Projects/Web/react/ux-design/src/components/Recommender/Recommender.js":"30","/home/sahasp/Projects/Web/react/ux-design/src/components/Recommender/data.js":"31","/home/sahasp/Projects/Web/react/ux-design/src/components/SearchComponent/MovieAutoComplete.js":"32","/home/sahasp/Projects/Web/react/ux-design/src/features/Auth/utils/setAuthToken.js":"33","/home/sahasp/Projects/Web/react/ux-design/src/components/frontPage/oscar_data.js":"34","/home/sahasp/Projects/Web/react/ux-design/src/themes/theme.js":"35","/home/sahasp/Projects/Web/react/ux-design/src/components/frontPage/imdbList.js":"36","/home/sahasp/Projects/Web/react/ux-design/src/components/FlipCard/FlipCard.js":"37"},{"size":716,"mtime":1606711894111,"results":"38","hashOfConfig":"39"},{"size":1291,"mtime":1601125783046,"results":"40","hashOfConfig":"39"},{"size":5956,"mtime":1606682757285,"results":"41","hashOfConfig":"39"},{"size":1127,"mtime":1606484343501,"results":"42","hashOfConfig":"39"},{"size":2179,"mtime":1606589421167,"results":"43","hashOfConfig":"39"},{"size":632,"mtime":1606712329316,"results":"44","hashOfConfig":"39"},{"size":833,"mtime":1606666526603,"results":"45","hashOfConfig":"39"},{"size":398,"mtime":1606656200657,"results":"46","hashOfConfig":"39"},{"size":1502,"mtime":1605786429285,"results":"47","hashOfConfig":"39"},{"size":5363,"mtime":1606666526633,"results":"48","hashOfConfig":"39"},{"size":5378,"mtime":1606669405915,"results":"49","hashOfConfig":"39"},{"size":1724,"mtime":1606666394473,"results":"50","hashOfConfig":"39"},{"size":2068,"mtime":1606713342874,"results":"51","hashOfConfig":"39"},{"size":5719,"mtime":1606715041660,"results":"52","hashOfConfig":"39"},{"size":3476,"mtime":1606721561820,"results":"53","hashOfConfig":"39"},{"size":739,"mtime":1606721460787,"results":"54","hashOfConfig":"39"},{"size":2572,"mtime":1606715848754,"results":"55","hashOfConfig":"39"},{"size":1702,"mtime":1606721742090,"results":"56","hashOfConfig":"39"},{"size":295,"mtime":1606716029706,"results":"57","hashOfConfig":"39"},{"size":1169,"mtime":1606721687372,"results":"58","hashOfConfig":"39"},{"size":1208,"mtime":1606563131787,"results":"59","hashOfConfig":"39"},{"size":3509,"mtime":1604637903573,"results":"60","hashOfConfig":"39"},{"size":4127,"mtime":1606656302272,"results":"61","hashOfConfig":"39"},{"size":1618,"mtime":1606587902252,"results":"62","hashOfConfig":"39"},{"size":819,"mtime":1606679789281,"results":"63","hashOfConfig":"39"},{"size":5086,"mtime":1600238200177,"results":"64","hashOfConfig":"39"},{"size":694,"mtime":1601127572695,"results":"65","hashOfConfig":"39"},{"size":800,"mtime":1606666526686,"results":"66","hashOfConfig":"39"},{"size":163,"mtime":1601056553132,"results":"67","hashOfConfig":"39"},{"size":8920,"mtime":1606683305525,"results":"68","hashOfConfig":"39"},{"size":2184,"mtime":1606670013931,"results":"69","hashOfConfig":"39"},{"size":4332,"mtime":1605095831652,"results":"70","hashOfConfig":"39"},{"size":250,"mtime":1606711894257,"results":"71","hashOfConfig":"39"},{"size":15020,"mtime":1606484343504,"results":"72","hashOfConfig":"39"},{"size":217,"mtime":1604481082900,"results":"73","hashOfConfig":"39"},{"size":1987,"mtime":1606588916025,"results":"74","hashOfConfig":"39"},{"size":1532,"mtime":1606682433218,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},"mvn247",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"79"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"79"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"79"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"79"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"141"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"/home/sahasp/Projects/Web/react/ux-design/src/views/App/App.js",["162"],"import React,{useEffect} from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\n/* import Layout from \"../Layout/Layout\"; */\nimport { Provider } from \"react-redux\";\nimport CustomThemeProvider from \"../../CustomThemeProvider\";\nimport store from \"../../store\";\nimport CustomizedSnackbars from \"../../features/Snackbar/Snackbar\";\nimport Home from \"../Layout/Home\";\n\n\nconst App = () =>{\n  return (\n    \n    <CustomThemeProvider>\n      <Provider store={store}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon.  */}\n        <CssBaseline />\n        <CustomizedSnackbars />\n\n        <Home />\n      </Provider>\n    </CustomThemeProvider>\n  );\n}\nexport default App;",["163","164"],"/home/sahasp/Projects/Web/react/ux-design/src/features/Snackbar/Snackbar.js",[],["165","166"],"/home/sahasp/Projects/Web/react/ux-design/src/views/Layout/Layout.js",["167","168","169"],"import React, { useState } from \"react\";\nimport { Container, Grid, Button, Typography, Paper } from \"@material-ui/core\";\nimport DraggableComponent from \"../../components/Draggable/Draggable\";\n// import DraggableComponent from \"../../components/Draggable/Draggable\";\nimport Recommender from \"../../components/Recommender/Recommender\";\nimport { setSnackbar } from \"../../features/Snackbar/snackbarSlice\";\nimport { useDispatch } from \"react-redux\";\nimport MovieSearchCard from \"../../components/SearchComponent/MovieSearchCard\";\nimport { Link } from \"react-router-dom\";\nimport ImageSlider from \"../../components/frontPage/ImageSlider\";\nimport OscarList from \"../../components/frontPage/oscar_data\";\nimport ImdbList from \"../../components/frontPage/imdbList\";\n// import ReactScrollableList from '../../dist/index'\nimport ScrollTop from \"../../components/ScrollTop\";\nimport { Fab } from \"@material-ui/core\";\n\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport MovieCard from \"../../components/SearchComponent/MovieCard\";\n\nexport default function Layout(props) {\n  const dispatch = useDispatch();\n\n  const imgList = OscarList.map((data) => data.poster_path);\n  const oscTitle = OscarList.map((t) => t.title);\n  const oscDate = OscarList.map((d) => d.date);\n\n  const [movie, setMovie] = useState(\"\");\n\n  return (\n    <>\n      <Container>\n        <p className=\"lead\">\n          Alright!Alright!Alright!You come to a fine place if you are confused\n          on what to watch next ? We will help you to take the decision.\n        </p>\n        <div className=\"buttons\">\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            <Grid item>\n              <Link\n                to=\"/movie-recommender-frontend/register\"\n                // className=\"btn btn-primary\"\n              >\n                <Button color=\"secondary\" variant=\"contained\">\n                  Register\n                </Button>\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link\n                to=\"/movie-recommender-frontend/login\"\n                // className=\"btn btn-light\"\n              >\n                <Button color=\"primary\" variant=\"contained\">\n                  Login\n                </Button>\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link\n                to=\"/movie-recommender-frontend/select\"\n                // className=\"btn btn-light\"\n              >\n                <Button color=\"primary\" variant=\"contained\">\n                  Selection\n                </Button>\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link\n                to=\"/movie-recommender-frontend/\"\n                // className=\"btn btn-light\"\n              >\n                <Button color=\"primary\" variant=\"contained\">\n                  Home\n                </Button>\n              </Link>\n            </Grid>\n          </Grid>\n        </div>\n\n        {/* <Grid container>\n          <Grid item>\n            <MovieCard movie={movie} />\n          </Grid>\n          <Grid item>\n            <Recommender\n              movie={movie}\n              setMovie={setMovie}\n              cols={{ lg: 8, md: 6, sm: 4, xs: 2 }}\n            />\n          </Grid>\n        </Grid> */}\n        <Container maxWidth={\"lg\"}>\n          <Grid container direction=\"column\" spacing={4}>\n            <Grid item> </Grid>\n            <Grid item container>\n              <Grid item container direction=\"row\" spacing={4}>\n                <Grid item md={8} sm={12}>\n                  <Grid item container direction=\"column\" spacing={4}>\n                    <Grid item>\n                      <Recommender\n                        movie={movie}\n                        setMovie={setMovie}\n                        colSize={{ lg: 3, md: 3, sm: 3, xs: 1 }}\n                      />\n                    </Grid>\n                    <Grid item>\n                      <DraggableComponent />\n                    </Grid>\n                    <Grid item>\n                      <ImageSlider\n                        imgList={imgList}\n                        title={oscTitle}\n                        date={oscDate}\n                      />\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item container spacing={2} md={4} sm={12}>\n                  <Grid item sm={6} md={12}>\n                    <MovieSearchCard movie={movie} setMovie={setMovie} />\n                  </Grid>\n                  <Grid item sm={6} md={12}>\n                    <ImdbList />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item container>\n              <Grid item container direction=\"row\" spacing={4}>\n                <Grid item md={8} sm={12}>\n                  <Grid item container direction=\"column\">\n                    <Grid item>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => {\n                          dispatch(\n                            setSnackbar({\n                              snackbarOpen: true,\n                              snackbarType: \"success\",\n                              snackbarMessage: \"Snackbar launched\",\n                            })\n                          );\n                        }}\n                      >\n                        Launch Snackbar\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <ScrollTop {...props}>\n            <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n              <KeyboardArrowUpIcon />\n            </Fab>\n          </ScrollTop>\n        </Container>\n      </Container>\n    </>\n  );\n}\n","/home/sahasp/Projects/Web/react/ux-design/src/components/frontPage/ImageSlider.js",[],"/home/sahasp/Projects/Web/react/ux-design/src/components/SearchComponent/MovieSearchCard.js",["170","171"],"import React, { useEffect, useState } from \"react\";\nimport MovieCard from \"./MovieCard\";\nimport { Card, CardContent, CardHeader } from \"@material-ui/core\";\nimport MovieAutoComplete from \"./MovieAutoComplete\";\nconst API_ADDRESS = \"https://www.omdbapi.com/?apikey=e4c29baa&t=\";\n\n// const AUTOCOMPLETE_API_ADDRESS =\n//   \"https://api.themoviedb.org/3/search/movie?api_key=ea575fa4bf65c424e93e0c032ab5c5f2&language=en-US&query=\";\n// const AUTOCOMPLETE_TOP_API_ADDRESS =\n//   \"https://api.themoviedb.org/3/movie/top_rated?api_key=ea575fa4bf65c424e93e0c032ab5c5f2&language=en-US&page=1\";\n\n// const style = {\n//   width: 200,\n//   height: 200,\n//   borderRadius: 100,\n//   objectFit: \"cover\",\n// };\n\nconst MovieSearchCard = (props) => {\n  // const [state, setState] = useState({ movieQuery: \"\", movie: \"\" });\n  const [movieSelected, setMovieSelected] = useState(\"\");\n\n  const {movie, setMovie} = props\n  useEffect(() => {\n    fetch(`${API_ADDRESS}avengers`)\n      .then((response) => response.json())\n      .then((json) => {\n        // console.log(json);\n        setMovie(json);\n        // setState({ movie: json });\n      })\n      .catch((error) => alert(error.message));\n  }, []);\n\n  useEffect(() => {\n    const searchMovie = () => {\n      if (movieSelected !== \"\") {\n        fetch(`${API_ADDRESS} + ${movieSelected.title}`)\n          .then((response) => response.json())\n          .then((json) => {\n            if (json.Response !== \"False\") {\n              // setState({ ...state, movie: json });\n              setMovie(json);\n              // setQuery(\"\");\n            }\n          })\n          .catch((error) => alert(error.message));\n      }\n    };\n\n    if (typeof movieSelected !== \"undefined\") {\n      console.log(movieSelected);\n      searchMovie();\n    }\n  }, [movieSelected]);\n\n  // console.log(query);\n  return (\n    <>\n      <Card>\n        <CardHeader title=\"Movie Search\" />\n        <CardContent>\n          {/* <Typography variant=\"h5\">Movie Search</Typography> */}\n\n          <MovieAutoComplete setMovieSelected={setMovieSelected} />\n        </CardContent>\n      </Card>\n      {movie ? <MovieCard movie={movie} /> : null}\n    </>\n  );\n};\n\nexport default MovieSearchCard;\n",["172","173"],"/home/sahasp/Projects/Web/react/ux-design/src/themes/dark.js",[],"/home/sahasp/Projects/Web/react/ux-design/src/components/frontPage/Header.jsx",[],"/home/sahasp/Projects/Web/react/ux-design/src/components/AppBar/HideOnScroll.jsx",[],"/home/sahasp/Projects/Web/react/ux-design/src/components/frontPage/Footer.jsx",[],"/home/sahasp/Projects/Web/react/ux-design/src/components/frontPage/MovieCard.jsx",[],"/home/sahasp/Projects/Web/react/ux-design/src/components/Grid/CustomGrid.js",[],"/home/sahasp/Projects/Web/react/ux-design/src/components/Grid/Primitives.js",[],"/home/sahasp/Projects/Web/react/ux-design/src/components/Recommender/Cell.js",["174","175","176","177","178","179","180","181"],"/home/sahasp/Projects/Web/react/ux-design/src/components/AppBar/TopNavBar.js",["182","183","184","185","186","187"],"/home/sahasp/Projects/Web/react/ux-design/src/views/Layout/auth/Register.js",[],"/home/sahasp/Projects/Web/react/ux-design/src/features/Auth/loadUser.js",["188"],"/home/sahasp/Projects/Web/react/ux-design/src/views/Layout/auth/Login.js",[],"/home/sahasp/Projects/Web/react/ux-design/src/views/Layout/Home.js",["189","190"],"/home/sahasp/Projects/Web/react/ux-design/src/store.js",[],"/home/sahasp/Projects/Web/react/ux-design/src/features/Auth/registerSlice.js",[],"/home/sahasp/Projects/Web/react/ux-design/src/components/ScrollTop.jsx",[],"/home/sahasp/Projects/Web/react/ux-design/src/components/SearchComponent/MovieSearch.js",[],"/home/sahasp/Projects/Web/react/ux-design/src/components/SearchComponent/MovieCard.js",["191"],"import {\n  Card,\n  Typography,\n  CardMedia,\n  makeStyles,\n  CardContent,\n  CardHeader,\n  Collapse,\n  CardActions,\n  IconButton,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport clsx from \"clsx\";\nimport LikeButton from \"../LikeButton\";\nimport { Skeleton } from \"@material-ui/lab\";\n\n// const style = {\n//     width: 200,\n//     height: 200,\n//     borderRadius: 100,\n//     objectFit: 'cover'\n// }\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 10,\n  },\n  media: {\n    width: \"100%\",\n    maxHeight: 400,\n    objectFit: \"cover\",\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n}));\n\nconst MovieCard = (props) => {\n  const { movie, index = 69, loading = false } = props;\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        title={\n          loading ? (\n            <Skeleton\n              animation=\"wave\"\n              height={10}\n              width=\"80%\"\n              style={{ marginBottom: 6 }}\n            />\n          ) : (\n            movie?.Title ?? \"Unknown\"\n          )\n        }\n      />\n      {loading ? (\n        <Skeleton animation=\"wave\" variant=\"rect\" />\n      ) : (\n        <CardMedia\n          component=\"img\"\n          className={classes.media}\n          image={movie?.Poster}\n        />\n      )}\n\n      <CardContent>\n        {loading ? (\n          <>\n            <Skeleton\n              animation=\"wave\"\n              height={10}\n              style={{ marginBottom: 6 }}\n            />\n            <Skeleton\n              animation=\"wave\"\n              height={10}\n              style={{ marginBottom: 6 }}\n            />\n            <Skeleton\n              animation=\"wave\"\n              height={10}\n              width=\"80%\"\n              style={{ marginBottom: 6 }}\n            />\n          </>\n        ) : (\n          <>\n            <LikeButton data={movie} index={index} />\n            <Typography align=\"center\">\n              {movie?.Year ?? \"Unknown\"} {movie?.Genre ?? \"Unknown\"}\n              {movie?.Runtime ?? \"Unknown\"}\n            </Typography>\n            {movie?.Ratings?.map((Ratings, index) => {\n              return (\n                <Typography align=\"center\" key={Ratings?.Source ?? index}>\n                  {Ratings?.Source ?? \"Unknown\"}: {Ratings?.Value ?? index}\n                </Typography>\n              );\n            })}\n          </>\n        )}\n      </CardContent>\n      <CardActions>\n        <IconButton\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"Show More\"\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          {loading ? (\n            <>\n              <Skeleton\n                animation=\"wave\"\n                height={10}\n                style={{ marginBottom: 6 }}\n              />\n              <Skeleton\n                animation=\"wave\"\n                height={10}\n                width=\"80%\"\n                style={{ marginBottom: 6 }}\n              />\n            </>\n          ) : (\n            <>\n              <Typography align=\"center\">\n                {movie?.Actors ?? \"Unknown\"}\n              </Typography>\n              <Typography align=\"center\">\n                BoxOffice: {movie?.BoxOffice ?? \"Unknown\"}\n              </Typography>\n              <Typography variant=\"body1\" align=\"justify\">\n                {movie?.Plot ?? \"Unknown\"}\n              </Typography>\n            </>\n          )}\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n};\n\nexport default React.memo(MovieCard);\n","/home/sahasp/Projects/Web/react/ux-design/src/components/LikeButton.jsx",["192","193","194","195","196","197"],"import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport lottie from \"lottie-web/build/player/lottie_light\";\nimport likeAnimation from \"../assets/lottie/like.json\";\nimport heartLoveAnimation from \"../assets/lottie/heart-love.json\";\nimport heartsLikeAnimation from \"../assets/lottie/hearts-like.json\";\nimport starAniamtion from \"../assets/lottie/star.json\";\nimport starDarkAniamtion from \"../assets/lottie/star-dark.json\";\nimport { IconButton } from \"@material-ui/core\";\n\nconst LikeButton = (props) => {\n  const [liked, setLiked] = useState(false);\n  const { index, data, height = 50, width = 50 } = props;\n  console.log(index);\n  console.log(data);\n  const [animation, setAnimation] = useState(null);\n\n  const container = useRef(null);\n\n  console.log(container);\n\n  useEffect(() => {\n    const loadAnimation = () =>\n      lottie.loadAnimation({\n        container: container.current,\n        name: index,\n        animationData: starDarkAniamtion,\n        renderer: \"svg\",\n        loop: false,\n        autoplay: false,\n      });\n    setAnimation(loadAnimation());\n  }, []);\n\n  useEffect(() => {\n    if (!animation) return;\n\n    if (liked) {\n      lottie.setSpeed(1);\n      lottie.setDirection(1);\n      lottie.play(index);\n    } else {\n      lottie.setDirection(-1);\n      lottie.setSpeed(2);\n      lottie.play(index);\n    }\n  }, [liked, index, animation]);\n\n  const handleLike = () => {\n    setLiked(!liked);\n  };\n\n  return (\n    <IconButton onClick={handleLike}>\n      <div ref={container} style={{ height: height, width: width }} />\n    </IconButton>\n  );\n};\nexport default React.memo(LikeButton);\n","/home/sahasp/Projects/Web/react/ux-design/src/components/FloatCard/FloatCard.jsx",[],"/home/sahasp/Projects/Web/react/ux-design/src/serviceWorker.js",[],"/home/sahasp/Projects/Web/react/ux-design/src/features/Snackbar/snackbarSlice.js",[],"/home/sahasp/Projects/Web/react/ux-design/src/views/Layout/UserPickLayout.js",["198"],"import React from 'react';\nimport { Container, Grid} from '@material-ui/core';\nimport Header from '../../components/frontPage/Header';\nimport Contents from '../../components/frontPage/Contents';\nimport MovieSearch from '../../components/SearchComponent/MovieSearch';\n// import axios from 'axios';\n// import {useState,useEffect} from 'react';\n\n\nconst UserPickLayout = () =>{\n\n  return (\n    \n    <Grid container direction='column'>\n      <Grid item xs={12} > \n        <Header/>\n      </Grid>\n      \n      <Grid item align='center'>\n          <MovieSearch/>\n      </Grid>\n      \n      <Grid item container>\n        <Grid item xs={2} sm={2} md={2}/>\n        <Grid item xs={10} sm={8} md={8}/>\n          <Contents/>\n      </Grid>\n    \n    </Grid>\n    \n      \n    \n  );\n};\n\nexport default UserPickLayout;\n",["199","200"],"/home/sahasp/Projects/Web/react/ux-design/src/themes/base.js",[],"/home/sahasp/Projects/Web/react/ux-design/src/components/Recommender/Recommender.js",["201","202","203","204","205","206","207","208","209"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\nimport {\n  Container,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport Axios from \"axios\";\nimport LikeButton from \"../LikeButton\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport FloatCard from \"../FloatCard/FloatCard\";\nimport CustomGrid from \"../Grid/CustomGrid\";\n\nimport data from \"./data\";\nimport { config } from \"react-spring/renderprops\";\nimport Cell from \"./Cell\";\nimport FlipCard from \"../FlipCard/FlipCard\";\nconst API_ADDRESS = \"https://www.omdbapi.com/?apikey=e4c29baa&t=\";\nconst RECOMMEND_API_ADDRESS =\n  \"https://vae-movie-recommender.herokuapp.com/predict/10\";\n\nconst useStyles = makeStyles((theme) => ({\n  bar: {\n    borderRadius: \"0px 0px 10px 10px\",\n  },\n  image: {\n    borderRadius: \"10px\",\n    width: 200,\n  },\n\n  buttonbasestyle: {\n    // maxWidth: \"200px\",\n    maxHeight: \"20px\",\n    minWidth: \"150px\",\n    minHeight: \"30px\",\n    borderRadius: 5,\n    \"&:hover\": {\n      color: \"pink\",\n    },\n    marginBottom: 10,\n    marginTop: 10,\n  },\n  textStyle: {\n    position: \"absolute\",\n    top: 104,\n    fontSize: 16,\n    fontFamily: \"Lato\",\n  },\n  root: {\n    padding: theme.spacing() * 2,\n  },\n}));\n\nconst Recommender = (props) => {\n  const [recommendedMovieList, setRecommendedMovieList] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const { movie, setMovie, colSize = {}, height = 300, breadth = 200 } = props;\n  const classes = useStyles();\n\n  function getCols(screenWidth) {\n    if (isWidthUp(\"lg\", screenWidth)) {\n      return colSize?.lg ?? 6;\n    }\n\n    if (isWidthUp(\"md\", screenWidth)) {\n      return colSize?.md ?? 4;\n    }\n    if (isWidthUp(\"sm\", screenWidth)) {\n      return colSize?.sm ?? 3;\n    }\n\n    return colSize?.xs ?? 2;\n  }\n\n  const cols = getCols(props.width); // width is associated when using withWidth()\n\n  const searchMovie = (movie) => {\n    if (movie !== \"\") {\n      fetch(`${API_ADDRESS} + ${movie.title}`)\n        .then((response) => response.json())\n        .then((json) => {\n          if (json.Response !== \"False\") {\n            // setState({ ...state, movie: json });\n            json.index = movie.index;\n            setMovie(json);\n            // setQuery(\"\");\n          }\n        })\n        .catch((error) => alert(error.message));\n    }\n  };\n  const searchRecommendation = (movie) => {\n    if (movie !== \"\") {\n      fetch(`${RECOMMEND_API_ADDRESS}`)\n        .then((response) => response.json())\n        .then(async (json) => {\n          if (json.Response !== \"False\") {\n            // setState({ ...state, movie: json });\n            console.log(json);\n            const movies = await Promise.all(\n              json.movies.map(async (movie, index) => {\n                try {\n                  const res = await Axios.get(\n                    \"https://image.tmdb.org/t/p/w185\" + movie.posterPath\n                  );\n                  if (res.data === \"<h1>File not Found</h1>\") throw Error;\n                  movie.posterPath =\n                    \"https://image.tmdb.org/t/p/w185\" + movie.posterPath;\n                } catch (err) {\n                  const res = await Axios.get(\n                    `${API_ADDRESS} + ${movie.title}`\n                  );\n                  // console.log(res);\n                  movie.posterPath = res.data.Poster;\n                }\n                return movie;\n              })\n            );\n\n            setRecommendedMovieList(movies);\n            setLoading(false);\n            // setQuery(\"\");\n          }\n        })\n        .catch((error) => alert(error.message));\n    }\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    searchRecommendation();\n  }, []);\n\n  let state = { data };\n  return (\n    <>\n      <Container>\n        {/* <FloatCard>\n        <FlipCard\n          height={height}\n          width={breadth}\n          front={<p>Front</p>}\n          back={<p>Back</p>}\n        />z\n      </FloatCard> */}\n\n        {loading ? (\n          <GridList cols={cols} height={height} spacing={32}>\n            {new Array(10).fill(0).map((value, index) => (\n              <GridListTile>\n                <Skeleton\n                  animation=\"wave\"\n                  height={height}\n                  width=\"100%\"\n                  variant=\"rect\"\n                />\n                <GridListTileBar\n                  title={\n                    <Skeleton\n                      animation=\"wave\"\n                      height={10}\n                      width=\"80%\"\n                      style={{ marginBottom: 6 }}\n                    />\n                  }\n                  actionIcon={\n                    <Skeleton\n                      animation=\"wave\"\n                      variant=\"circle\"\n                      height={20}\n                      width={20}\n                      style={{ margin: 20 }}\n                    />\n                  }\n                />\n              </GridListTile>\n            ))}\n          </GridList>\n        ) : (\n          <CustomGrid\n            style={{ width: \"100%\" }}\n            // Arbitrary data, should contain keys, possibly heights, etc.\n            data={recommendedMovieList}\n            // Key accessor, instructs grid on how to fet individual keys from the data set\n            keys={(d) => d.index}\n            // Can be a fixed value or an individual data accessor\n            heights={height}\n            // Number of columns\n            columns={cols}\n            // Space between elements\n            margin={100}\n            // Removes the possibility to scroll away from a maximized element\n            lockScroll={false}\n            // Delay when active elements (blown up) are minimized again\n            closeDelay={500}\n            // Regular react-spring configs\n            config={config.slow}\n          >\n            {(data, active, toggle) => (\n              <Cell\n                active={active}\n                toggle={toggle}\n                {...data}\n                height={height}\n                width={breadth}\n              />\n            )}\n          </CustomGrid>\n        )}\n        {/* <GridList\n        cellHeight={height}\n        cols={cols}\n        spacing={32}\n        className={classes.root}\n      >\n        {loading\n          ? new Array(10).fill(0).map((value, index) => (\n              <GridListTile cols={movie?.cols || 1}>\n                <Skeleton\n                  animation=\"wave\"\n                  height={height}\n                  width={breadth}\n                  variant=\"rect\"\n                />\n                <GridListTileBar\n                  title={\n                    <Skeleton\n                      animation=\"wave\"\n                      height={10}\n                      width=\"80%\"\n                      style={{ marginBottom: 6 }}\n                    />\n                  }\n                  actionIcon={\n                    <Skeleton\n                      animation=\"wave\"\n                      variant=\"circle\"\n                      height={20}\n                      width={20}\n                      style={{ margin: 20 }}\n                    />\n                  }\n                />\n              </GridListTile>\n            ))\n          : recommendedMovieList.map((movie, index) => (\n              <GridListTile\n                key={index}\n                cols={movie?.cols ?? 1}\n                // component={FloatCard}\n              >\n                <FlipCard\n                  height={height}\n                  width={breadth}\n                  front={\n                    <img\n                      onClick={() => {\n                        searchMovie(movie);\n                      }}\n                      style={{ height: height, width: breadth }}\n                      src={movie?.posterPath}\n                      alt=\"Poster\"\n                    />\n                  }\n                  back={\n                    <div style={{ height: height, width: breadth }}>\n                      <Typography>{movie?.title}</Typography>\n                    </div>\n                  }\n                />\n\n                <GridListTileBar\n                  className={classes.bar}\n                  title={\n                    loading ? (\n                      <Skeleton\n                        animation=\"wave\"\n                        height={10}\n                        width=\"80%\"\n                        style={{ marginBottom: 6 }}\n                      />\n                    ) : (\n                      movie?.title ?? \"Unknown\"\n                    )\n                  }\n                  actionIcon={\n                    <LikeButton data={movie} index={movie?.index ?? 69} />\n                  }\n                />\n              </GridListTile>\n            ))}\n      </GridList> */}\n      </Container>\n    </>\n  );\n};\n\nexport default withWidth()(Recommender);\n","/home/sahasp/Projects/Web/react/ux-design/src/components/Recommender/data.js",["210"],"export default [\n  {\n    name: \"Rare Wind\",\n    description: \"#a8edea → #fed6e3\",\n    css: \"linear-gradient(to top, #a8edea 0%, #fed6e3 100%)\",\n    height: 100,\n  },\n  {\n    name: \"Saint Petersburg\",\n    description: \"#f5f7fa → #c3cfe2\",\n    css: \"linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)\",\n    height: 200,\n  },\n  {\n    name: \"Deep Blue\",\n    description: \"#e0c3fc → #8ec5fc\",\n    css: \"linear-gradient(120deg, #e0c3fc 0%, #8ec5fc 100%)\",\n    height: 200,\n  },\n  {\n    name: \"Ripe Malinka\",\n    description: \"#f093fb → #f5576c\",\n    css: \"linear-gradient(120deg, #f093fb 0%, #f5576c 100%)\",\n    height: 200,\n  },\n  {\n    name: \"Perfect White\",\n    description: \"#fdfbfb → #ebedee\",\n    css: \"linear-gradient(-225deg, #E3FDF5 0%, #FFE6FA 100%)\",\n    height: 200,\n  },\n  {\n    name: \"Near Moon\",\n    description: \"#5ee7df → #b490ca\",\n    css: \"linear-gradient(to top, #5ee7df 0%, #b490ca 100%)\",\n    height: 200,\n  },\n  {\n    name: \"Wild Apple\",\n    description: \"#d299c2 → #fef9d7\",\n    css: \"linear-gradient(to top, #d299c2 0%, #fef9d7 100%)\",\n    height: 100,\n  },\n  {\n    name: \"Ladoga Bottom\",\n    description: \"#ebc0fd → #d9ded8\",\n    css: \"linear-gradient(to top, #ebc0fd 0%, #d9ded8 100%)\",\n    height: 200,\n  },\n  {\n    name: \"Sunny Morning\",\n    description: \"#f6d365 → #fda085\",\n    css: \"linear-gradient(120deg, #f6d365 0%, #fda085 100%)\",\n    height: 100,\n  },\n  {\n    name: \"Lemon Gate\",\n    description: \"#96fbc4 → #f9f586\",\n    css: \"linear-gradient(to top, #96fbc4 0%, #f9f586 100%)\",\n    height: 200,\n  },\n  {\n    name: \"Salt Mountain\",\n    description: \" #FFFEFF → #D7FFFE\",\n    css: \"linear-gradient(-225deg, #FFFEFF 0%, #D7FFFE 100%)\",\n    height: 100,\n  },\n  {\n    name: \"New York\",\n    description: \" #fff1eb → #ace0f9\",\n    css: \"linear-gradient(to top, #fff1eb 0%, #ace0f9 100%)\",\n    height: 200,\n  },\n  {\n    name: \"Soft Grass\",\n    description: \" #c1dfc4 → #deecdd\",\n    css: \"linear-gradient(to top, #c1dfc4 0%, #deecdd 100%)\",\n    height: 200,\n  },\n  {\n    name: \"Japan Blush\",\n    description: \" #ddd6f3 → #faaca8\",\n    css: \"linear-gradient(-20deg, #ddd6f3 0%, #faaca8 100%, #faaca8 100%)\",\n    height: 100,\n  },\n];\n","/home/sahasp/Projects/Web/react/ux-design/src/components/SearchComponent/MovieAutoComplete.js",[],"/home/sahasp/Projects/Web/react/ux-design/src/features/Auth/utils/setAuthToken.js",[],"/home/sahasp/Projects/Web/react/ux-design/src/components/frontPage/oscar_data.js",[],"/home/sahasp/Projects/Web/react/ux-design/src/themes/theme.js",[],"/home/sahasp/Projects/Web/react/ux-design/src/components/frontPage/imdbList.js",[],"/home/sahasp/Projects/Web/react/ux-design/src/components/FlipCard/FlipCard.js",[],{"ruleId":"211","severity":1,"message":"212","line":1,"column":15,"nodeType":"213","messageId":"214","endLine":1,"endColumn":24},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"215","replacedBy":"219"},{"ruleId":"217","replacedBy":"220"},{"ruleId":"211","severity":1,"message":"221","line":2,"column":35,"nodeType":"213","messageId":"214","endLine":2,"endColumn":45},{"ruleId":"211","severity":1,"message":"222","line":2,"column":47,"nodeType":"213","messageId":"214","endLine":2,"endColumn":52},{"ruleId":"211","severity":1,"message":"223","line":18,"column":8,"nodeType":"213","messageId":"214","endLine":18,"endColumn":17},{"ruleId":"224","severity":1,"message":"225","line":33,"column":6,"nodeType":"226","endLine":33,"endColumn":8,"suggestions":"227"},{"ruleId":"224","severity":1,"message":"225","line":55,"column":6,"nodeType":"226","endLine":55,"endColumn":21,"suggestions":"228"},{"ruleId":"215","replacedBy":"229"},{"ruleId":"217","replacedBy":"230"},{"ruleId":"211","severity":1,"message":"231","line":2,"column":3,"nodeType":"213","messageId":"214","endLine":2,"endColumn":9},{"ruleId":"211","severity":1,"message":"232","line":4,"column":3,"nodeType":"213","messageId":"214","endLine":4,"endColumn":14},{"ruleId":"211","severity":1,"message":"233","line":6,"column":3,"nodeType":"213","messageId":"214","endLine":6,"endColumn":13},{"ruleId":"211","severity":1,"message":"234","line":12,"column":8,"nodeType":"213","messageId":"214","endLine":12,"endColumn":13},{"ruleId":"211","severity":1,"message":"235","line":13,"column":17,"nodeType":"213","messageId":"214","endLine":13,"endColumn":26},{"ruleId":"211","severity":1,"message":"236","line":13,"column":28,"nodeType":"213","messageId":"214","endLine":13,"endColumn":32},{"ruleId":"211","severity":1,"message":"237","line":14,"column":10,"nodeType":"213","messageId":"214","endLine":14,"endColumn":14},{"ruleId":"211","severity":1,"message":"238","line":14,"column":16,"nodeType":"213","messageId":"214","endLine":14,"endColumn":20},{"ruleId":"211","severity":1,"message":"239","line":9,"column":3,"nodeType":"213","messageId":"214","endLine":9,"endColumn":8},{"ruleId":"211","severity":1,"message":"240","line":20,"column":3,"nodeType":"213","messageId":"214","endLine":20,"endColumn":7},{"ruleId":"211","severity":1,"message":"241","line":21,"column":3,"nodeType":"213","messageId":"214","endLine":21,"endColumn":6},{"ruleId":"211","severity":1,"message":"242","line":22,"column":11,"nodeType":"213","messageId":"214","endLine":22,"endColumn":18},{"ruleId":"211","severity":1,"message":"243","line":27,"column":8,"nodeType":"213","messageId":"214","endLine":27,"endColumn":27},{"ruleId":"211","severity":1,"message":"244","line":96,"column":11,"nodeType":"213","messageId":"214","endLine":96,"endColumn":17},{"ruleId":"211","severity":1,"message":"245","line":1,"column":8,"nodeType":"213","messageId":"214","endLine":1,"endColumn":20},{"ruleId":"211","severity":1,"message":"245","line":11,"column":8,"nodeType":"213","messageId":"214","endLine":11,"endColumn":20},{"ruleId":"224","severity":1,"message":"246","line":24,"column":6,"nodeType":"226","endLine":24,"endColumn":8,"suggestions":"247"},{"ruleId":"211","severity":1,"message":"212","line":12,"column":17,"nodeType":"213","messageId":"214","endLine":12,"endColumn":26},{"ruleId":"211","severity":1,"message":"248","line":1,"column":28,"nodeType":"213","messageId":"214","endLine":1,"endColumn":35},{"ruleId":"211","severity":1,"message":"249","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":21},{"ruleId":"211","severity":1,"message":"250","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":26},{"ruleId":"211","severity":1,"message":"251","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":27},{"ruleId":"211","severity":1,"message":"252","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":21},{"ruleId":"224","severity":1,"message":"253","line":32,"column":6,"nodeType":"226","endLine":32,"endColumn":8,"suggestions":"254"},{"ruleId":"211","severity":1,"message":"255","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":19},{"ruleId":"215","replacedBy":"256"},{"ruleId":"217","replacedBy":"257"},{"ruleId":"211","severity":1,"message":"222","line":9,"column":3,"nodeType":"213","messageId":"214","endLine":9,"endColumn":8},{"ruleId":"211","severity":1,"message":"221","line":10,"column":3,"nodeType":"213","messageId":"214","endLine":10,"endColumn":13},{"ruleId":"211","severity":1,"message":"258","line":13,"column":8,"nodeType":"213","messageId":"214","endLine":13,"endColumn":18},{"ruleId":"211","severity":1,"message":"259","line":15,"column":8,"nodeType":"213","messageId":"214","endLine":15,"endColumn":17},{"ruleId":"211","severity":1,"message":"260","line":21,"column":8,"nodeType":"213","messageId":"214","endLine":21,"endColumn":16},{"ruleId":"211","severity":1,"message":"261","line":62,"column":11,"nodeType":"213","messageId":"214","endLine":62,"endColumn":16},{"ruleId":"211","severity":1,"message":"262","line":63,"column":9,"nodeType":"213","messageId":"214","endLine":63,"endColumn":16},{"ruleId":"211","severity":1,"message":"263","line":82,"column":9,"nodeType":"213","messageId":"214","endLine":82,"endColumn":20},{"ruleId":"211","severity":1,"message":"264","line":139,"column":7,"nodeType":"213","messageId":"214","endLine":139,"endColumn":12},{"ruleId":"265","severity":1,"message":"266","line":1,"column":1,"nodeType":"267","endLine":86,"endColumn":3},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["268"],"no-negated-in-lhs",["269"],["268"],["269"],"'Typography' is defined but never used.","'Paper' is defined but never used.","'MovieCard' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setMovie'. Either include it or remove the dependency array.","ArrayExpression",["270"],["271"],["268"],["269"],"'Button' is defined but never used.","'CardActions' is defined but never used.","'CardHeader' is defined but never used.","'Close' is defined but never used.","'Component' is defined but never used.","'lazy' is defined but never used.","'Slug' is defined but never used.","'Fade' is defined but never used.","'Slide' is defined but never used.","'Zoom' is defined but never used.","'Fab' is defined but never used.","'LinkMUI' is defined but never used.","'KeyboardArrowUpIcon' is defined but never used.","'window' is assigned a value but never used.","'setAuthToken' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["272"],"'useMemo' is defined but never used.","'likeAnimation' is defined but never used.","'heartLoveAnimation' is defined but never used.","'heartsLikeAnimation' is defined but never used.","'starAniamtion' is defined but never used.","React Hook useEffect has a missing dependency: 'index'. Either include it or remove the dependency array.",["273"],"'Container' is defined but never used.",["268"],["269"],"'LikeButton' is defined but never used.","'FloatCard' is defined but never used.","'FlipCard' is defined but never used.","'movie' is assigned a value but never used.","'classes' is assigned a value but never used.","'searchMovie' is assigned a value but never used.","'state' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},"Update the dependencies array to be: [setMovie]",{"range":"282","text":"283"},"Update the dependencies array to be: [movieSelected, setMovie]",{"range":"284","text":"285"},"Update the dependencies array to be: [dispatch]",{"range":"286","text":"287"},"Update the dependencies array to be: [index]",{"range":"288","text":"289"},[1171,1173],"[setMovie]",[1763,1778],"[movieSelected, setMovie]",[847,849],"[dispatch]",[1086,1088],"[index]"]