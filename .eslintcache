[{"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\views\\Layout\\Home.js":"1","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\AppBar\\TopNavBar.js":"2","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\features\\Snackbar\\snackbarSlice.js":"3","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\themes\\light.js":"4","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\ScrollTop\\ScrollTopIcon.jsx":"5","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\themes\\theme.js":"6","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\views\\Layout\\Layout.js":"7","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\ScrollFollow\\useScrollPosition.js":"8","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\MovieDetail\\MovieDetail.js":"9","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\FloatCard\\FloatCard.jsx":"10","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\views\\Layout\\Profile.js":"11","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\themes\\base.js":"12","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\frontPage\\Contents.jsx":"13","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\LikeButton\\LikeButton.jsx":"14","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\themes\\dark.js":"15","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\views\\Layout\\UserPickLayout.js":"16","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\AppBar\\HideOnScroll.jsx":"17","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\frontPage\\imdbList.js":"18","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\frontPage\\ImageSlider.js":"19","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\ScrollFollow\\ScrollFollow.jsx":"20","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\HorizonalScroll\\HorizontalScroll.js":"21","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\views\\Layout\\auth\\Login.js":"22","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\features\\Auth\\registerSlice.js":"23","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\frontPage\\oscar_data.js":"24","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\views\\Layout\\auth\\Register.js":"25","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\frontPage\\Header.jsx":"26"},{"size":1485,"mtime":1613748797320,"results":"27","hashOfConfig":"28"},{"size":9722,"mtime":1614513862026,"results":"29","hashOfConfig":"28"},{"size":721,"mtime":1613748797316,"results":"30","hashOfConfig":"28"},{"size":728,"mtime":1613990473944,"results":"31","hashOfConfig":"28"},{"size":1291,"mtime":1613748797306,"results":"32","hashOfConfig":"28"},{"size":299,"mtime":1613748797318,"results":"33","hashOfConfig":"28"},{"size":8830,"mtime":1614342035402,"results":"34","hashOfConfig":"28"},{"size":1212,"mtime":1613748797305,"results":"35","hashOfConfig":"28"},{"size":10655,"mtime":1613992748284,"results":"36","hashOfConfig":"28"},{"size":893,"mtime":1613748797298,"results":"37","hashOfConfig":"28"},{"size":2331,"mtime":1613748797321,"results":"38","hashOfConfig":"28"},{"size":174,"mtime":1613748797317,"results":"39","hashOfConfig":"28"},{"size":11661,"mtime":1613988409000,"results":"40","hashOfConfig":"28"},{"size":2080,"mtime":1613748797302,"results":"41","hashOfConfig":"28"},{"size":703,"mtime":1613748797317,"results":"42","hashOfConfig":"28"},{"size":772,"mtime":1613748797321,"results":"43","hashOfConfig":"28"},{"size":413,"mtime":1613748797293,"results":"44","hashOfConfig":"28"},{"size":2395,"mtime":1613995802972,"results":"45","hashOfConfig":"28"},{"size":1337,"mtime":1613995617587,"results":"46","hashOfConfig":"28"},{"size":12493,"mtime":1613748797304,"results":"47","hashOfConfig":"28"},{"size":1208,"mtime":1613748797301,"results":"48","hashOfConfig":"28"},{"size":6532,"mtime":1614516168641,"results":"49","hashOfConfig":"28"},{"size":3565,"mtime":1613748797314,"results":"50","hashOfConfig":"28"},{"size":15677,"mtime":1613748797312,"results":"51","hashOfConfig":"28"},{"size":7254,"mtime":1613988552496,"results":"52","hashOfConfig":"28"},{"size":771,"mtime":1613988409001,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"1oqjmsb",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\views\\Layout\\Home.js",["117"],"import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport TopNavBar from \"../../components/AppBar/TopNavBar\";\r\nimport Login from \"./auth/Login\";\r\nimport Register from \"./auth/Register\";\r\nimport Layout from \"./Layout\";\r\nimport UserPickLayout from \"./UserPickLayout\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loadUser } from \"../../features/Auth/loadUser\";\r\n\r\nimport Profile from \"./Profile\";\r\nconst Home = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    loadUser(dispatch);\r\n  }, []);\r\n\r\n  console.log(props);\r\n  return (\r\n    <Router>\r\n      <TopNavBar />\r\n      <Switch>\r\n        <Route exact path=\"/movie-recommender-frontend/\" component={Layout} />\r\n        <Route\r\n          exact\r\n          path=\"/movie-recommender-frontend/login\"\r\n          component={Login}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/movie-recommender-frontend/register\"\r\n          component={Register}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/movie-recommender-frontend/select\"\r\n          component={UserPickLayout}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/movie-recommender-frontend/dashboard\"\r\n          component={Layout}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/movie-recommender-frontend/profile\"\r\n          component={Profile}\r\n        />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n",["118","119"],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\AppBar\\TopNavBar.js",[],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\features\\Snackbar\\snackbarSlice.js",[],["120","121"],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\themes\\light.js",[],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\ScrollTop\\ScrollTopIcon.jsx",[],["122","123"],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\themes\\theme.js",[],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\views\\Layout\\Layout.js",["124"],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\ScrollFollow\\useScrollPosition.js",["125"],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\MovieDetail\\MovieDetail.js",["126","127","128"],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\FloatCard\\FloatCard.jsx",[],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\views\\Layout\\Profile.js",["129","130"],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\themes\\base.js",[],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\frontPage\\Contents.jsx",["131","132"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport Footer from \"./Footer\";\r\n// import movieList from './data'\r\n// https://image.tmdb.org/t/p/w185\r\n// import {useState} from 'react';\r\n// import axios from 'axios';\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addMovie,\r\n  selectMovieSelected,\r\n  selectToken,\r\n} from \"../../features/Auth/registerSlice\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nimport { setSnackbar } from \"../../features/Snackbar/snackbarSlice\";\r\n\r\nconst API_ADDRESS = \"https://www.omdbapi.com/?apikey=e4c29baa&i=\";\r\n\r\nconst addToPreferenceAPI = async (index, token = \"\", add = true) => {\r\n  const operation = add ? \"add\" : \"remove\";\r\n  try {\r\n    await Axios.post(\r\n      `https://vae-login.herokuapp.com/api/${operation}-movie`,\r\n      {\r\n        index: index,\r\n      },\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-auth-token\": token,\r\n        },\r\n      }\r\n    );\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nasync function getMovieTitle(selectedTitle) {\r\n  //recommendation\r\n\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(selectedTitle),\r\n  };\r\n\r\n  return fetch(\r\n    \"https://item-recommendation.herokuapp.com/recom\",\r\n    requestOptions\r\n  )\r\n    .then(async (response) => {\r\n      const data = await response.json();\r\n      // check for error response\r\n      if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.message) || response.status;\r\n        return Promise.reject(error);\r\n      }\r\n      // console.log(data);\r\n      return data;\r\n    })\r\n\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n}\r\n\r\nconst Contents = () => {\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [movieIndex, setMovieIndex] = useState([]);\r\n  const [selectedMovieList, setSelectedMovieList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [selectButtonClicked, setSelectButtonClicked] = useState(false);\r\n  const token = useSelector(selectToken);\r\n  const dispatch = useDispatch();\r\n\r\n  const movieSelected = useSelector(selectMovieSelected);\r\n\r\n  const FIND_INDEX_API_ADDRESS =\r\n    \"https://vae-movie-recommender.herokuapp.com/findIndex\";\r\n  useEffect(() => {\r\n    try {\r\n      if (movieSelected || typeof movieSelected != \"undefined\") {\r\n        console.log(\"MOVIE SELECED\");\r\n        console.log(movieSelected);\r\n        Axios.post(\r\n          FIND_INDEX_API_ADDRESS,\r\n          {\r\n            title: movieSelected.title,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"x-auth-token\": token,\r\n            },\r\n          }\r\n        ).then((res) => {\r\n          console.log(\"INDEXXX\");\r\n          console.log(res.data);\r\n\r\n          if (res.data[\"index\"].length === 0) {\r\n            dispatch(\r\n              setSnackbar({\r\n                snackbarOpen: true,\r\n                snackbarType: \"error\",\r\n                snackbarMessage: `Did not find selected movie in recommender system's database! Please, choose another movie.`,\r\n              })\r\n            );\r\n          } else {\r\n            let response = res?.data[\"index\"][0];\r\n            response = response[\"index\"];\r\n\r\n            console.log(response);\r\n\r\n            if (response !== 0 && response < 62000) {\r\n              if (selectedMovieList.includes(response)) {\r\n                selectedMovieList.splice(selectedMovieList.indexOf(res), 1);\r\n              } else {\r\n                selectedMovieList.push(response);\r\n                (async function () {\r\n                  let data = await getMovieTitle(response);\r\n\r\n                  await getDetails(data, response, {\r\n                    index: response,\r\n                    ...movieSelected,\r\n                  }); //get details of predicted list here data is the predicted top 20\r\n                })();\r\n              }\r\n\r\n              showHide(selectedMovieList);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, [movieSelected]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await axios\r\n        .get(\"https://movie-database-server.herokuapp.com/api/items\")\r\n        .then(async (res) => {\r\n          const movies = await Promise.all(\r\n            res.data.map(async (movie, index) => {\r\n              let omdbRes;\r\n              try {\r\n                omdbRes = await Axios.get(`${API_ADDRESS}${movie.imdbId}`);\r\n              } catch (err) {\r\n                console.log(err);\r\n              }\r\n\r\n              try {\r\n                const res = await Axios.get(\r\n                  \"https://image.tmdb.org/t/p/w185\" + movie.posterPath\r\n                );\r\n                if (res.data === \"<h1>File not Found</h1>\") throw Error;\r\n                movie.posterPath =\r\n                  \"https://image.tmdb.org/t/p/w185\" + movie.posterPath;\r\n              } catch (err) {\r\n                // console.log(res);\r\n                movie.posterPath = omdbRes?.data?.Poster ?? \"Unknown\";\r\n              }\r\n              movie = { ...movie, ...omdbRes.data };\r\n\r\n              return movie;\r\n            })\r\n          );\r\n\r\n          // console.log(\"TEST MOVIE\");\r\n          // console.table(movies);\r\n\r\n          setMovieList(movies);\r\n          setMovieIndex(\r\n            movies.map((movie) => {\r\n              return movie.index;\r\n            })\r\n          );\r\n\r\n          setLoading(false);\r\n          // console.log(res.data);\r\n        })\r\n        .catch((error) => alert(error.message));\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const [check, setCheck] = useState(false);\r\n\r\n  function getRandom(arr, n) {\r\n    var result = new Array(n),\r\n      len = arr.length,\r\n      taken = new Array(len);\r\n    if (n > len) {\r\n      throw new RangeError(\"getRandom: more elements taken than available\");\r\n    }\r\n    while (n--) {\r\n      var x = Math.floor(Math.random() * len);\r\n      result[n] = arr[x in taken ? taken[x] : x];\r\n      taken[x] = --len in taken ? taken[len] : len;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async function getAllDetails(detailsList) {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ title: detailsList }),\r\n    };\r\n\r\n    return fetch(\r\n      \"https://movie-database-server.herokuapp.com/api/items/singleItem\",\r\n      requestOptions\r\n    )\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        // check for error response\r\n        if (!response.ok) {\r\n          // get error message from body or default to response status\r\n          const error = (data && data.message) || response.status;\r\n          return Promise.reject(error);\r\n        }\r\n        // console.log(data);\r\n        return data;\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n\r\n  async function getDetails(data, index, movieSelected = \" \") {\r\n    console.log(\"DATA\");\r\n    console.log(data);\r\n    try {\r\n      var detailsList = [];\r\n      await Promise.all(\r\n        data.map((Details) =>\r\n          (async function () {\r\n            let data = await getAllDetails(Details);\r\n            // console.log(data)\r\n            if (data[0] !== undefined) {\r\n              detailsList.push(data[0]);\r\n            }\r\n          })()\r\n        )\r\n      );\r\n\r\n      // console.log(det);\r\n      // console.log(detailsList);\r\n\r\n      // console.log(\"DETAILS LIST\");\r\n      // console.log(detailsList);\r\n      var fourRndom = getRandom(detailsList, 4);\r\n      // console.log(fourRndom);\r\n\r\n      // const movies = await Promise.all(\r\n      //   fourRndom.map(async (movie, index) => {\r\n      //     let omdbRes;\r\n      //     try {\r\n      //       omdbRes = await Axios.get(`${API_ADDRESS}${movie.imdbId}`);\r\n      //     } catch (err) {\r\n      //       console.log(err);\r\n      //     }\r\n\r\n      //     try {\r\n      //       const res = await Axios.get(\r\n      //         \"https://image.tmdb.org/t/p/w185\" + movie.posterPath\r\n      //       );\r\n      //       if (res.data === \"<h1>File not Found</h1>\") throw Error;\r\n      //       movie.posterPath =\r\n      //         \"https://image.tmdb.org/t/p/w185\" + movie.posterPath;\r\n      //     } catch (err) {\r\n      //       // console.log(res);\r\n      //       movie.posterPath = omdbRes?.data?.Poster ?? \"Unknown\";\r\n      //     }\r\n      //     movie = { ...movie, ...omdbRes.data };\r\n\r\n      //     return movie;\r\n      //   })\r\n      // );\r\n\r\n      const movieListFront = movieList.slice(0, movieIndex.indexOf(index) + 1);\r\n      const movieListBack = movieList.slice(movieIndex.indexOf(index) + 1);\r\n\r\n      let updatedMovieList = [];\r\n      updatedMovieList = movieListFront.concat(fourRndom);\r\n      updatedMovieList = updatedMovieList.concat(movieListBack);\r\n      if (movieSelected !== \" \") {\r\n        updatedMovieList = [movieSelected].concat(updatedMovieList);\r\n      }\r\n      // console.log(\"Updated Movie List\");\r\n      // console.log(updatedMovieList);\r\n      // updatedMovieList.splice(movieIndex.indexOf(index) + 1, 4, ...fourRndom);\r\n\r\n      setMovieList(updatedMovieList);\r\n\r\n      setMovieIndex(\r\n        updatedMovieList.map((movie) => {\r\n          return movie.index;\r\n        })\r\n      );\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  }\r\n\r\n  const showHide = (selectedList) => {\r\n    setSelectedMovieList(selectedList);\r\n    console.log(\"Selected Movie List\" + selectedMovieList);\r\n\r\n    if (typeof selectedList === \"undefined\" || selectedList.length < 1) {\r\n      setCheck(false);\r\n    } else {\r\n      setCheck(true);\r\n    }\r\n  };\r\n  const getMovieCard = (movieObj) => {\r\n    return (\r\n      <Grid item xs={12} sm={4} md={2} align=\"center\">\r\n        <MovieCard\r\n          {...movieObj}\r\n          showHide={showHide}\r\n          selectedList={selectedMovieList}\r\n          setSelectedList={setSelectedMovieList}\r\n          getDetails={getDetails}\r\n        />\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const addToPreference = async () => {\r\n    try {\r\n      dispatch(addMovie({ index: selectedMovieList }));\r\n\r\n      addToPreferenceAPI(selectedMovieList, token, true);\r\n\r\n      setSelectButtonClicked(true);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  if (selectButtonClicked) {\r\n    return (\r\n      <Redirect\r\n        from=\"/movie-recommender-frontend/select\"\r\n        to=\"/movie-recommender-frontend/\"\r\n      />\r\n    );\r\n  }\r\n\r\n  // console.log(\"Movie List:\");\r\n  // console.table(movieList);\r\n\r\n  // console.log(\"Movie List\" + movieList);\r\n  // console.log(\"Movie Index\" + movieIndex);\r\n\r\n  return (\r\n    <>\r\n    \r\n      <Grid\r\n        item\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        container\r\n      >\r\n        {loading\r\n          ? new Array(50).fill(0).map(() => (\r\n              <Grid item>\r\n                <Skeleton\r\n                  animation=\"wave\"\r\n                  variant=\"circle\"\r\n                  height={200}\r\n                  width={200}\r\n                  style={{ margin: 4 }}\r\n                />\r\n              </Grid>\r\n            ))\r\n          : movieList?.map((movieObj) => getMovieCard(movieObj))}\r\n      </Grid>\r\n      <Footer check={check} onClickFinished={addToPreference} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contents;\r\n",["133","134"],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\LikeButton\\LikeButton.jsx",["135"],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\themes\\dark.js",[],["136","137"],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\views\\Layout\\UserPickLayout.js",[],["138","139"],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\AppBar\\HideOnScroll.jsx",[],["140","141"],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\frontPage\\imdbList.js",["142","143"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// import List from \"@material-ui/core/List\";\r\n// import ListItem from \"@material-ui/core/ListItem\";\r\n// import ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\n// import ListItemText from \"@material-ui/core/ListItemText\";\r\n// import ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Grid,\r\n  Hidden,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport HorizontalScroll from \"../HorizonalScroll/HorizontalScroll.js\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function ImdbList() {\r\n  // const classes = useStyles();\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setTitle();\r\n  }, []);\r\n  async function setTitle() {\r\n    const api = `https://api.themoviedb.org/3/movie/top_rated?api_key=ea575fa4bf65c424e93e0c032ab5c5f2&language=en-US&page=1&fbclid=IwAR18OladL8C8b1moaQTUsdyAMo7ES3GZY0mvi3hbP-1pgKr2J4JOp_K8fBU`;\r\n    const result = await fetch(api);\r\n    const getResult = await result.json();\r\n    const finalResult = getResult.results;\r\n\r\n    setData(finalResult);\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Top IMDB Movies\" />\r\n      <CardContent>\r\n        {/* <List dense className={classes.root}> */}\r\n        <HorizontalScroll>\r\n          {data.map((value, index) => {\r\n            return (\r\n              <Grid container item alignItems=\"center\" justify=\"center\" direction=\"row\" style={{width:200, margin:10}}>\r\n                <Grid item >\r\n                  <Avatar\r\n                    style={{height:200, width:200}}\r\n                    alt={`Avatar n°${value + 1}`}\r\n                    src={`https://image.tmdb.org/t/p/w185${value.poster_path}`}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item style={{width:200,overflow:\"hidden\", align: \"center\"}} >\r\n                  <Typography>{value.title}</Typography>\r\n                  <Typography variant=\"body2\">{value.vote_average}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            );\r\n          })}\r\n          {/* </List> */}\r\n        </HorizontalScroll>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\frontPage\\ImageSlider.js",[],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\ScrollFollow\\ScrollFollow.jsx",[],["144","145"],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\HorizonalScroll\\HorizontalScroll.js",[],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\views\\Layout\\auth\\Login.js",["146","147"],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\features\\Auth\\registerSlice.js",[],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\frontPage\\oscar_data.js",[],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\views\\Layout\\auth\\Register.js",["148","149","150"],"C:\\Users\\ASUS\\Documents\\Minor\\movie-recommender-frontend\\src\\components\\frontPage\\Header.jsx",[],{"ruleId":"151","severity":1,"message":"152","line":18,"column":6,"nodeType":"153","endLine":18,"endColumn":8,"suggestions":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"155","replacedBy":"159"},{"ruleId":"157","replacedBy":"160"},{"ruleId":"155","replacedBy":"161"},{"ruleId":"157","replacedBy":"162"},{"ruleId":"151","severity":1,"message":"163","line":152,"column":6,"nodeType":"153","endLine":152,"endColumn":12,"suggestions":"164"},{"ruleId":"151","severity":1,"message":"165","line":32,"column":29,"nodeType":"166","endLine":32,"endColumn":55},{"ruleId":"167","severity":1,"message":"168","line":63,"column":11,"nodeType":"169","messageId":"170","endLine":63,"endColumn":21},{"ruleId":"171","severity":1,"message":"172","line":81,"column":64,"nodeType":"173","messageId":"174","endLine":81,"endColumn":65,"fix":"175"},{"ruleId":"171","severity":1,"message":"172","line":82,"column":40,"nodeType":"173","messageId":"174","endLine":82,"endColumn":41,"fix":"176"},{"ruleId":"151","severity":1,"message":"177","line":43,"column":6,"nodeType":"153","endLine":43,"endColumn":8,"suggestions":"178"},{"ruleId":"151","severity":1,"message":"179","line":47,"column":6,"nodeType":"153","endLine":47,"endColumn":8,"suggestions":"180"},{"ruleId":"151","severity":1,"message":"181","line":145,"column":6,"nodeType":"153","endLine":145,"endColumn":21,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":377,"column":9,"nodeType":"185","endLine":377,"endColumn":18},{"ruleId":"155","replacedBy":"186"},{"ruleId":"157","replacedBy":"187"},{"ruleId":"151","severity":1,"message":"188","line":63,"column":6,"nodeType":"153","endLine":63,"endColumn":13,"suggestions":"189"},{"ruleId":"155","replacedBy":"190"},{"ruleId":"157","replacedBy":"191"},{"ruleId":"155","replacedBy":"192"},{"ruleId":"157","replacedBy":"193"},{"ruleId":"155","replacedBy":"194"},{"ruleId":"157","replacedBy":"195"},{"ruleId":"167","severity":1,"message":"196","line":14,"column":3,"nodeType":"169","messageId":"170","endLine":14,"endColumn":9},{"ruleId":"167","severity":1,"message":"197","line":19,"column":7,"nodeType":"169","messageId":"170","endLine":19,"endColumn":16},{"ruleId":"155","replacedBy":"198"},{"ruleId":"157","replacedBy":"199"},{"ruleId":"167","severity":1,"message":"200","line":19,"column":8,"nodeType":"169","messageId":"170","endLine":19,"endColumn":24},{"ruleId":"167","severity":1,"message":"201","line":20,"column":8,"nodeType":"169","messageId":"170","endLine":20,"endColumn":16},{"ruleId":"167","severity":1,"message":"200","line":14,"column":8,"nodeType":"169","messageId":"170","endLine":14,"endColumn":24},{"ruleId":"167","severity":1,"message":"201","line":15,"column":8,"nodeType":"169","messageId":"170","endLine":15,"endColumn":16},{"ruleId":"167","severity":1,"message":"202","line":17,"column":8,"nodeType":"169","messageId":"170","endLine":17,"endColumn":13},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["203"],"no-native-reassign",["204"],"no-negated-in-lhs",["205"],["204"],["205"],["204"],["205"],"React Hook useEffect has missing dependencies: 'genres' and 'searchRecommendation'. Either include them or remove the dependency array.",["206"],"Assignments to the 'throttleTimeout' variable from inside React Hook useLayoutEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useLayoutEffect.","CallExpression","no-unused-vars","'posterPath' is assigned a value but never used.","Identifier","unusedVar","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"207","text":"208"},{"range":"209","text":"208"},"React Hook useEffect has missing dependencies: 'dispatch' and 'user'. Either include them or remove the dependency array.",["210"],"React Hook useEffect has a missing dependency: 'func'. Either include it or remove the dependency array.",["211"],"React Hook useEffect has missing dependencies: 'dispatch', 'getDetails', 'selectedMovieList', 'showHide', and 'token'. Either include them or remove the dependency array.",["212"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["204"],["205"],"React Hook useEffect has missing dependencies: 'clicked', 'dispatch', 'index', and 'token'. Either include them or remove the dependency array.",["213"],["204"],["205"],["204"],["205"],["204"],["205"],"'Hidden' is defined but never used.","'useStyles' is assigned a value but never used.",["204"],["205"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Paper' is defined but never used.",{"desc":"214","fix":"215"},"no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},[2149,2158],"\r\n      .",[2191,2200],{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},"Update the dependencies array to be: [dispatch]",{"range":"226","text":"227"},"Update the dependencies array to be: [genres, name, searchRecommendation]",{"range":"228","text":"229"},"Update the dependencies array to be: [dispatch, user]",{"range":"230","text":"231"},"Update the dependencies array to be: [func]",{"range":"232","text":"233"},"Update the dependencies array to be: [dispatch, getDetails, movieSelected, selectedMovieList, showHide, token]",{"range":"234","text":"235"},"Update the dependencies array to be: [clicked, dispatch, index, liked, token]",{"range":"236","text":"237"},[590,592],"[dispatch]",[4237,4243],"[genres, name, searchRecommendation]",[1131,1133],"[dispatch, user]",[1178,1180],"[func]",[4395,4410],"[dispatch, getDetails, movieSelected, selectedMovieList, showHide, token]",[1635,1642],"[clicked, dispatch, index, liked, token]"]