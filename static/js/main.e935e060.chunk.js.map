{"version":3,"sources":["components/SearchComponent/MovieCard.js","components/SearchComponent/MovieSearch.js","themes/base.js","themes/light.js","themes/dark.js","CustomThemeProvider.js","components/AppBar/TopNavBar.js","components/FadeIn/FadeIn.js","components/Draggable/Draggable.js","features/Snackbar/snackbarSlice.js","views/Layout/Layout.js","store.js","features/Snackbar/Snackbar.js","views/App/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","marginTop","maxWidth","media","height","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","MovieCard","movie","classes","useState","expanded","setExpanded","Card","className","CardHeader","title","Title","CardMedia","component","image","Poster","CardContent","Typography","align","Year","Genre","Runtime","Ratings","map","key","Source","Value","CardActions","IconButton","onClick","aria-expanded","aria-label","clsx","Collapse","in","timeout","unmountOnExit","Actors","BoxOffice","variant","Plot","API_ADDRESS","MovieSearch","state","movieQuery","updateMovieQuerry","event","setState","target","value","handleKeyPress","searchMovie","fetch","then","response","json","Response","catch","error","alert","message","console","log","this","TextField","onChange","onKeyPress","placeholder","Button","color","Component","themes","light","createMuiTheme","palette","type","primary","main","secondary","red","A400","background","default","titleBar","contrastText","dark","CustomThemeContext","createContext","currentTheme","setTheme","CustomThemeProvider","props","children","prefersDarkMode","useMediaQuery","useMemo","localStorage","getItem","themeName","_setThemeName","getTheme","contextValue","name","setItem","Provider","ThemeProvider","ElevationScroll","trigger","useScrollTrigger","disableHysteresis","threshold","React","cloneElement","elevation","TopNavBar","useContext","isDark","Boolean","AppBar","Toolbar","Switch","checked","FadeInAnimation","fadeDirection","wrapperElement","direction","delay","distance","compRef","useRef","x","y","useEffect","gsap","from","current","opacity","ref","registerPlugin","Draggable","DraggableComponent","drag","path","pathLength","getTotalLength","years","parts","i","push","splitpath","liveSnap","point","Math","round","document","getElementById","innerHTML","bounds","width","viewBox","xmlns","id","fill","d","stroke","strokeWidth","strokeLinecap","cx","cy","r","snackbarSlice","createSlice","initialState","snackbarOpen","snackbarType","snackbarMessage","reducers","setSnackbar","action","payload","actions","Layout","dispatch","useDispatch","Container","Grid","container","spacing","item","sm","FadeIn","configureStore","reducer","snackbar","snackbarReducer","CustomizedSnackbars","useSelector","handleClose","reason","Snackbar","open","autoHideDuration","onClose","Alert","App","store","CssBaseline","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e935e060.chunk.js","sourcesContent":["import {\n  Card,\n  Typography,\n  CardMedia,\n  makeStyles,\n  CardContent,\n  CardHeader,\n  Collapse,\n  CardActions,\n  IconButton,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\n\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport clsx from \"clsx\";\n\n// const style = {\n//     width: 200,\n//     height: 200,\n//     borderRadius: 100,\n//     objectFit: 'cover'\n// }\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 10,\n    maxWidth: 345,\n  },\n  media: {\n    height: 300,\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n}));\n\nconst MovieCard = ({ movie }) => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader title={movie.Title} />\n      <CardMedia\n        component=\"img\"\n        className={classes.media}\n        image={movie.Poster}\n      />\n\n      <CardContent>\n        <Typography align=\"center\">\n          {movie.Year} {movie.Genre} {movie.Runtime}{\" \"}\n        </Typography>\n        {movie.Ratings.map((Ratings) => {\n          return (\n            <Typography align=\"center\" key={Ratings.Source}>\n              {\" \"}\n              {Ratings.Source} : {Ratings.Value}{\" \"}\n            </Typography>\n          );\n        })}\n      </CardContent>\n      <CardActions>\n        <IconButton\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"Show More\"\n          className={clsx(classes.expand, { [classes.expandOpen]: expanded })}\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography align=\"center\">{movie.Actors}</Typography>\n          <Typography align=\"center\"> BoxOffice: {movie.BoxOffice}</Typography>\n          <Typography variant=\"body1\" align=\"justify\">\n            {movie.Plot}\n          </Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n};\n\nexport default MovieCard;\n","import React, { Component } from \"react\";\nimport MovieCard from \"./MovieCard\";\nimport {\n  Button,\n  Typography,\n  CardActions,\n  TextField,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\n\nconst API_ADDRESS = \"https://www.omdbapi.com/?apikey=e4c29baa&t=\";\n// const style = {\n//   width: 200,\n//   height: 200,\n//   borderRadius: 100,\n//   objectFit: \"cover\",\n// };\n\nclass MovieSearch extends Component {\n  state = { movieQuery: \"\", movie: \"\" };\n\n  updateMovieQuerry = (event) => {\n    this.setState({ movieQuery: event.target.value });\n  };\n\n  handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      this.searchMovie();\n    }\n  };\n\n  searchMovie = () => {\n    if (this.state.movieQuery !== \"\") {\n      fetch(`${API_ADDRESS} + ${this.state.movieQuery}`)\n        .then((response) => response.json())\n        .then((json) => {\n          if (json.Response !== \"False\") {\n            this.setState({ ...this.state, movie: json });\n          }\n        })\n        .catch((error) => alert(error.message));\n    }\n  };\n  componentDidMount() {\n    fetch(`${API_ADDRESS}avengers`)\n      .then((response) => response.json())\n      .then((json) => {\n        console.log(json);\n        this.setState({ movie: json });\n      })\n      .catch((error) => alert(error.message));\n  }\n\n  render() {\n    console.log(this.state.movieQuery);\n    return (\n      <>\n        <Card>\n          <CardContent>\n            <Typography variant=\"h5\">Movie Search</Typography>\n            <TextField\n              variant=\"outlined\"\n              onChange={this.updateMovieQuerry}\n              onKeyPress={this.handleKeyPress}\n              placeholder=\"Search Movie\"\n            />\n          </CardContent>\n\n          <CardActions>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.searchMovie}\n            >\n              Search\n            </Button>\n          </CardActions>\n        </Card>\n        {this.state.movie ? <MovieCard movie={this.state.movie} /> : null}\n      </>\n    );\n  }\n}\n\nexport default MovieSearch;\n","import light from \"./light\";\nimport dark from \"./dark\";\n\nconst themes = {\n  light,\n  dark,\n};\n\nexport default function getTheme(theme) {\n  return themes[theme];\n}\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { red } from \"@material-ui/core/colors\";\n\n// Normal or default theme\nconst theme = createMuiTheme({\n  palette: {\n    type: \"light\",\n    primary: {\n      main: \"#556cd6\",\n    },\n    secondary: {\n      main: \"#cc4444\",\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: \"#f5f5f5\",\n    },\n    titleBar: {\n      main: \"#eeeeee\",\n      contrastText: \"#222222\",\n    },\n  },\n});\n\nexport default theme;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { red } from \"@material-ui/core/colors\";\n\n// Dark theme\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: \"#26292C\",\n      light: \"rgb(81, 91, 95)\",\n      dark: \"rgb(26, 35, 39)\",\n      contrastText: \"#ffffff\",\n    },\n    secondary: {\n      main: \"#FFB74D\",\n      light: \"rgb(255, 197, 112)\",\n      dark: \"rgb(200, 147, 89)\",\n      contrastText: \"rgba(0, 0, 0, 0.87)\",\n    },\n    titleBar: {\n      main: \"#555555\",\n      contrastText: \"#ffffff\",\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n});\n\nexport default theme;\n","import React, { useState, createContext, useMemo } from \"react\";\nimport { ThemeProvider, useMediaQuery } from \"@material-ui/core\";\nimport getTheme from \"./themes/base\";\n\nexport const CustomThemeContext = createContext({\n  currentTheme: \"light\",\n  setTheme: null,\n});\n\nconst CustomThemeProvider = (props) => {\n  const { children } = props;\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  let currentTheme;\n  /*eslint-disable */\n  useMemo(() => (currentTheme = prefersDarkMode ? \"dark\" : \"light\"), [\n    prefersDarkMode,\n  ]);\n  /*eslint-enable */\n\n  // Read current theme from localStorage\n  currentTheme = localStorage.getItem(\"appTheme\") || currentTheme;\n\n  // State to hold the selected theme name\n  const [themeName, _setThemeName] = useState(currentTheme);\n\n  console.log(\"Theme name: \" + themeName);\n  // Retrieve the theme object by theme name\n  const theme = getTheme(themeName);\n\n  // Wrap _setThemeName to stor new theme names in localStorage\n  const setThemeName = (name) => {\n    localStorage.setItem(\"appTheme\", name);\n    _setThemeName(name);\n  };\n\n  const contextValue = {\n    currentTheme: themeName,\n    setTheme: setThemeName,\n  };\n\n  return (\n    <CustomThemeContext.Provider value={contextValue}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </CustomThemeContext.Provider>\n  );\n};\n\nexport default CustomThemeProvider;\n","import React, { useContext } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  useScrollTrigger,\n  Switch,\n} from \"@material-ui/core\";\nimport Menu from \"@material-ui/icons/Menu\";\nimport PropTypes from \"prop-types\";\nimport { CustomThemeContext } from \"../../CustomThemeProvider\";\n\nfunction ElevationScroll(props) {\n  const { children } = props;\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nElevationScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default function TopNavBar(props) {\n  const { currentTheme, setTheme } = useContext(CustomThemeContext);\n  const isDark = Boolean(currentTheme === \"dark\");\n\n  const handleThemeChange = (event) => {\n    const { checked } = event.target;\n    if (checked) {\n      setTheme(\"dark\");\n    } else {\n      setTheme(\"light\");\n    }\n  };\n  return (\n    <>\n      <ElevationScroll {...props}>\n        <AppBar>\n          <Toolbar>\n            <IconButton>\n              <Menu />\n            </IconButton>\n            <Typography>Material UI</Typography>\n            <Switch checked={isDark} onChange={handleThemeChange} />\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <Toolbar />\n    </>\n  );\n}\n","import React, { useRef, useEffect } from \"react\";\nimport { gsap } from \"gsap\";\n\nconst FadeInAnimation = ({\n  children,\n  wrapperElement = \"div\",\n  direction = null,\n  delay = 0,\n  distance = 200,\n  ...props\n}) => {\n  const Component = wrapperElement;\n  let compRef = useRef(null);\n  let fadeDirection;\n\n  switch (direction) {\n    case \"left\":\n      fadeDirection = { x: -distance };\n      break;\n    case \"right\":\n      fadeDirection = { x: distance };\n      break;\n    case \"up\":\n      fadeDirection = { y: distance };\n      break;\n    case \"down\":\n      fadeDirection = { y: -distance };\n      break;\n    default:\n      fadeDirection = { x: 0 };\n  }\n  useEffect(() => {\n    gsap.from(compRef.current, 1, {\n      ...fadeDirection,\n      opacity: 0,\n      delay,\n    });\n  }, [compRef, fadeDirection, delay]);\n\n  useEffect(() => {}, [compRef]);\n  return (\n    <Component ref={compRef} {...props}>\n      {children}\n    </Component>\n  );\n};\nexport default FadeInAnimation;\n","import React, { useRef, useEffect } from \"react\";\nimport { gsap } from \"gsap\";\nimport { Draggable } from \"gsap/Draggable\";\nimport { Card, CardContent } from \"@material-ui/core\";\n\ngsap.registerPlugin(Draggable);\n\nfunction DraggableComponent() {\n  let drag = useRef(null);\n  let path = useRef(null);\n\n  useEffect(() => {\n    let pathLength = path.current.getTotalLength();\n    // let startPoint=path.current.getPointAtLength(0);\n    let years = 1929,\n      parts = [];\n    function splitpath() {\n      for (var i = 0; i < pathLength - 15; i += 5) {\n        parts.push(years);\n        years++;\n      }\n      // console.log(parts);\n    }\n    splitpath();\n\n    function printYear(point) {\n      document.getElementById(\"demo\").innerHTML = parts[point];\n    }\n\n    function knowPoint(value) {\n      // console.log(Math.round(value / 5) * 5);\n\n      printYear((Math.round(value / 5) * 5) / 5);\n      return Math.round(value / 5) * 5;\n    }\n\n    Draggable.create(drag.current, {\n      liveSnap: knowPoint,\n\n      type: \"x\",\n      bounds: path.current,\n    });\n  });\n\n  return (\n    <Card>\n      <CardContent>\n        <svg\n          width=\"539\"\n          height=\"397\"\n          viewBox=\"0 0 500 500\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <rect\n            id=\"poster\"\n            x=\"90\"\n            y=\"100\"\n            height=\"200\"\n            width=\"475\"\n            fill=\"yellow\"\n          />\n\n          <g>\n            <path\n              id=\"path\"\n              ref={path}\n              d=\"M90 300 h 475\"\n              fill=\"red\"\n              stroke=\"red\"\n              strokeWidth=\"15\"\n              strokeLinecap=\"round\"\n            />\n            <circle\n              id=\"drag\"\n              ref={drag}\n              cx=\"100\"\n              cy=\"300\"\n              r=\"10\"\n              stroke=\"black\"\n              strokeWidth=\"3\"\n              fill=\"green\"\n            />\n          </g>\n        </svg>\n        <p id=\"demo\"></p>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default DraggableComponent;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  snackbarOpen: false,\n  snackbarType: \"success\",\n  snackbarMessage: \"\",\n};\n\nexport const snackbarSlice = createSlice({\n  name: \"snackbar\",\n  initialState,\n  reducers: {\n    setSnackbar: (state, action) => {\n      console.log(\"Action\", action.payload);\n      const { snackbarOpen, snackbarMessage, snackbarType } = action.payload;\n      state.snackbarMessage = snackbarMessage;\n      state.snackbarOpen = snackbarOpen;\n      state.snackbarType = snackbarType;\n    },\n  },\n});\n\nexport const { setSnackbar } = snackbarSlice.actions;\n\nexport const snackbar = (state) => state.snackbar;\n\nexport default snackbarSlice.reducer;\n","import React from \"react\";\nimport MovieSearch from \"../../components/SearchComponent/MovieSearch\";\nimport TopNavBar from \"../../components/AppBar/TopNavBar\";\nimport { Container, Grid, Button } from \"@material-ui/core\";\nimport FadeInAnimation from \"../../components/FadeIn/FadeIn\";\nimport DraggableComponent from \"../../components/Draggable/Draggable\";\n\nimport { setSnackbar } from \"../../features/Snackbar/snackbarSlice\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function Layout() {\n  const dispatch = useDispatch();\n\n  return (\n    <Container maxWidth={\"lg\"}>\n      <Grid container direction=\"column\" spacing={4}>\n        <Grid item>\n          <TopNavBar />\n        </Grid>\n\n        <Grid item container>\n          <Grid item container direction=\"row\" spacing={4}>\n            <Grid item sm={8}>\n              <Grid item container direction=\"column\">\n                <Grid item>\n                  <DraggableComponent />\n                </Grid>\n                <Grid item>\n                  <DraggableComponent />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item sm={4}>\n              <FadeInAnimation wrapperElement=\"div\" direction=\"right\">\n                <MovieSearch />\n              </FadeInAnimation>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item container>\n          <Grid item container direction=\"row\" spacing={4}>\n            <Grid item sm={8}>\n              <Grid item container direction=\"column\">\n                <Grid item>\n                  <DraggableComponent />\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => {\n                      dispatch(\n                        setSnackbar({\n                          snackbarOpen: true,\n                          snackbarType: \"success\",\n                          snackbarMessage: \"Snackbar launched\",\n                        })\n                      );\n                    }}\n                  >\n                    Launch Snackbat\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item sm={4}>\n              <FadeInAnimation wrapperElement=\"div\" direction=\"right\">\n                <MovieSearch />\n              </FadeInAnimation>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport snackbarReducer from \"../src/features/Snackbar/snackbarSlice\";\nexport default configureStore({\n  reducer: {\n    snackbar: snackbarReducer,\n  },\n});\n","import React from \"react\";\nimport { Snackbar, makeStyles } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSnackbar } from \"./snackbarSlice\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst CustomizedSnackbars = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const snackbarOpen = useSelector((state) => state.snackbar.snackbarOpen);\n  const snackbarType = useSelector((state) => state.snackbar.snackbarType);\n  const snackbarMessage = useSelector(\n    (state) => state.snackbar.snackbarMessage\n  );\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") return;\n    dispatch(setSnackbar(false, snackbarType, snackbarMessage));\n  };\n\n  return (\n    <div className={classes.root}>\n      <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert\n          elevation={6}\n          variant=\"filled\"\n          onClose={handleClose}\n          color={snackbarType}\n        >\n          {snackbarMessage}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default CustomizedSnackbars;\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Layout from \"../Layout/Layout\";\nimport { Provider } from \"react-redux\";\nimport CustomThemeProvider from \"../../CustomThemeProvider\";\nimport store from \"../../store\";\nimport CustomizedSnackbars from \"../../features/Snackbar/Snackbar\";\n\nexport default function App() {\n  return (\n    <CustomThemeProvider>\n      <Provider store={store}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <CustomizedSnackbars />\n        <Layout />\n      </Provider>\n    </CustomThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./views/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}